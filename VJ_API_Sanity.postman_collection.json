{
	"info": {
		"_postman_id": "9ca2b795-cf44-d202-980f-11b9466c3d3c",
		"name": "VJ API Sanity",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Registration - done",
			"item": [
				{
					"name": "Admin Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8905d2a-cce5-474b-aa00-8b1e066e1c86",
								"type": "text/javascript",
								"exec": [
									"var data = pm.globals.get(\"admin_context\");",
									"var admin_username = \"customerappadmin\";",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Context is \" + data] = jsonData.vjResponse.context === data;",
									"tests[\"Username is \" + admin_username] = jsonData.vjResponse.username === admin_username;",
									"",
									"",
									"pm.environment.set(\"registration_admin_token\", jsonData.vjResponse.token);",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "929e4742-a4b7-4693-beb0-2605230e8c3b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:27:36 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><vjResponse><context>customerappadmin</context><token>c0f1d316cb4e4f8fa251d0853426cde9</token><username>customerappadmin</username></vjResponse>"
						}
					]
				},
				{
					"name": "Auth Admin Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7fc98da9-36df-4890-91da-4478eae36ed9",
								"type": "text/javascript",
								"exec": [
									"// Device Push ID randomly generated",
									"var uuid = require('uuid');",
									"pm.globals.set('devicePushId', uuid.v4());",
									"",
									"// Encryptor.java code to JavaScript",
									"var email = pm.globals.get(\"admin_context\");",
									"var password = pm.globals.get(\"admin_password\");",
									"var token = pm.environment.get(\"registration_admin_token\");",
									"",
									"encrypt (email + \"\\\\+\" + password, token);",
									"",
									"function  encrypt (user_pass, token){",
									"    // var salt = hexStringToByte (\"f42832ab4ba1cc43\");",
									"    // var iterationCount = 20;",
									"    ",
									"    var password = CryptoJS.enc.Utf8.parse(token);",
									"    ",
									"    var salt = CryptoJS.enc.Hex.parse(\"f42832ab4ba1cc43\");",
									"    var iterations = 20;",
									"    ",
									"    // PBE according to PKCS#5 v1.5 (in other words: PBKDF1)",
									"    var md5 = CryptoJS.algo.MD5.create();",
									"    md5.update(password);",
									"    md5.update(salt);",
									"    var result = md5.finalize();",
									"    md5.reset();",
									"    for(var i = 1; i < iterations; i++) {",
									"        md5.update(result);",
									"        result = md5.finalize();",
									"        md5.reset();",
									"    }",
									"    ",
									"    // splitting key and IV",
									"    var key = CryptoJS.lib.WordArray.create(result.words.slice(0, 2));",
									"    var iv = CryptoJS.lib.WordArray.create(result.words.slice(2, 4));",
									"    ",
									"    var encrypted = CryptoJS.DES.encrypt(user_pass, key, {",
									"        iv: iv",
									"    });",
									"    ",
									"    pm.globals.set('registration_admin_credentials', token + encrypted.ciphertext.toString(CryptoJS.enc.Base64));",
									"",
									"    // enchex.innerHTML = encrypted.ciphertext.toString();",
									"    // encbase64.innerHTML = encrypted.ciphertext.toString(CryptoJS.enc.Base64);",
									"} ",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1ae8f945-727b-4260-9350-e664f7fbc8fb",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeader.isError === data1[2];",
									"",
									"var data2 = [true, false];",
									"",
									"tests[\"Success is \" + data2[0]] = jsonData.responseBody.success === data2[0];",
									"tests[\"Password should be changed: \" + data2[1]] = jsonData.responseBody.mustChangePassword === data2[1];",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"credentials\": \"{{registration_admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}"
						},
						"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"credentials\": \"{{registration_admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}"
								},
								"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "127",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:27:51 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeader\":{\"statusCode\":\"0\",\"message\":\"OK\",\"isError\":false},\"responseBody\":{\"success\":true,\"mustChangePassword\":false}}"
						}
					]
				},
				{
					"name": "REGISTER User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8e65664-e27d-43a5-8d29-40550a4f4a8a",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"var data2 = [pm.environment.get(\"registration_phone\"), pm.environment.get(\"registration_admin_token\"), pm.environment.get(\"registration_username\"), pm.environment.get(\"registration_firstName\")];",
									"",
									"tests[\"Phone Number is \" + data2[0]] = jsonData.responseBodyDto.phoneNumber === data2[0];",
									"tests[\"Token is \" + data2[1]] = jsonData.responseBodyDto.token === data2[1];",
									"tests[\"Email is \" + data2[2]] = jsonData.responseBodyDto.username === data2[2];",
									"tests[\"First Name is \" + data2[3]] = jsonData.responseBodyDto.firstName === data2[3];",
									"",
									"",
									"pm.environment.set(\"registration_externalAppUserId\", jsonData.responseBodyDto.externalAppUserId);",
									"pm.environment.set(\"registration_personId\", jsonData.responseBodyDto.personId);",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "83adfc9f-3da1-48a9-933d-50c6a94f5e41",
								"type": "text/javascript",
								"exec": [
									"var rand = Math.floor((Math.random() * 1000) + 10);",
									"",
									"var firstName = \"Maaz\" + rand;",
									"var username = \"maaz\" + rand + \"@vd.com\";",
									"var phone = \"+9233312312\" + rand;",
									"",
									"pm.environment.set(\"registration_firstName\", firstName);",
									"pm.environment.set(\"registration_username\", username);",
									"pm.environment.set(\"registration_phone\", phone);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"{{registration_username}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"salutation\": \"Mr.\",\r\n    \"firstName\": \"{{registration_firstName}}\",\r\n    \"lastName\": \"VD\",\r\n    \"gender\": \"m\",\r\n    \"phoneNumber\": \"{{registration_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"deviceType\": \"iso\",\r\n    \"osVersion\": \"9.3.2\",\r\n    \"city\": \"Karachi\",\r\n  \"countryName\": \"Pakistan\",\r\n  \"token\" : \"{{registration_admin_token}}\",\r\n    \"subscription\": \"true\",\r\n    \"company\": \"VistaJet\",\r\n    \"registrationReason\": 2,\r\n    \"source\": \"customerapp\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{registration_admin_token}}/user/register?mode=REGISTER",
							"host": [
								"{{url}}"
							],
							"path": [
								"extranetServices",
								"1.5",
								"{{customer_context}}",
								"{{admin_context}}",
								"{{registration_admin_token}}",
								"user",
								"register"
							],
							"query": [
								{
									"key": "mode",
									"value": "REGISTER"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"{{registration_username}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"salutation\": \"Mr.\",\r\n    \"firstName\": \"{{registration_firstName}}\",\r\n    \"lastName\": \"VD\",\r\n    \"gender\": \"m\",\r\n    \"phoneNumber\": \"{{registration_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"deviceType\": \"iso\",\r\n    \"osVersion\": \"9.3.2\",\r\n    \"city\": \"Karachi\",\r\n  \"countryName\": \"Pakistan\",\r\n  \"token\" : \"{{registration_admin_token}}\",\r\n    \"subscription\": \"true\",\r\n    \"company\": \"VistaJet\",\r\n    \"registrationReason\": 2,\r\n    \"source\": \"customerapp\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{registration_admin_token}}/user/register?mode=REGISTER",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.5",
										"{{customer_context}}",
										"{{admin_context}}",
										"{{registration_admin_token}}",
										"user",
										"register"
									],
									"query": [
										{
											"key": "mode",
											"value": "REGISTER"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "347",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:27:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=99",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"responseBodyDto\":{\"externalAppUserId\":55714,\"personId\":184042,\"phoneNumber\":\"+9233312312929\",\"token\":\"c0f1d316cb4e4f8fa251d0853426cde9\",\"username\":\"maaz929@vd.com\",\"salutation\":\"Mr.\",\"firstName\":\"Maaz929\",\"lastName\":\"VD\",\"gender\":\"m\",\"city\":\"Karachi\",\"countryName\":\"Pakistan\"}}"
						}
					]
				},
				{
					"name": "Verification Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4769ff2c-7749-4894-8f15-0782a9c982c8",
								"type": "text/javascript",
								"exec": [
									"var jsonData = xml2Json(responseBody);",
									"",
									"if(jsonData.users.user.length > 1)",
									"    pm.environment.set(\"verificationCode\", jsonData.users.user[0].verificationCode);",
									"else",
									"    pm.environment.set(\"verificationCode\", jsonData.users.user.verificationCode);",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{registration_username}}",
							"host": [
								"{{gv_url}}"
							],
							"path": [
								"1",
								"customerApp",
								"getUnverifiedCodeForUser",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "{{registration_username}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{registration_username}}",
									"host": [
										"{{gv_url}}"
									],
									"path": [
										"1",
										"customerApp",
										"getUnverifiedCodeForUser",
										""
									],
									"query": [
										{
											"key": "email",
											"value": "{{registration_username}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:28:11 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><users><user><expiryTime>2018-05-23T07:28:04.949Z</expiryTime><phoneNumber>+9233312312929</phoneNumber><verificationCode>DDZGGY</verificationCode></user></users>"
						}
					]
				},
				{
					"name": "VERIFY User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8563c343-f97b-4b9d-a42d-a42a723d89a1",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"var data2 = [pm.environment.get(\"registration_phone\"), pm.environment.get(\"registration_externalAppUserId\"), pm.environment.get(\"registration_personId\"), pm.environment.get(\"registration_firstName\"), pm.environment.get(\"registration_username\")];",
									"",
									"tests[\"Phone Number is \" + data2[0]] = jsonData.responseBodyDto.phoneNumber === data2[0];",
									"tests[\"UserId is \" + data2[1]] = jsonData.responseBodyDto.authenticatedUser.id === data2[1];",
									"tests[\"PersonId is \" + data2[2]] = jsonData.responseBodyDto.authenticatedUser.personId === data2[2];",
									"tests[\"First Name is \" + data2[3]] = jsonData.responseBodyDto.authenticatedUser.firstName === data2[3];",
									"tests[\"Email is \" + data2[4]] = jsonData.responseBodyDto.authenticatedUser.username === data2[4];",
									"",
									"pm.environment.set(\"registration_cust_token\", jsonData.responseBodyDto.token);",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "978a9ee5-68fa-4352-9700-1b92db968f78",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"externalAppUserId\": {{registration_externalAppUserId}},\r\n    \"phoneNumber\": \"{{registration_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{registration_admin_token}}/user/register?mode=VERIFY",
							"host": [
								"{{url}}"
							],
							"path": [
								"extranetServices",
								"1.5",
								"{{customer_context}}",
								"{{admin_context}}",
								"{{registration_admin_token}}",
								"user",
								"register"
							],
							"query": [
								{
									"key": "mode",
									"value": "VERIFY"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalAppUserId\": {{registration_externalAppUserId}},\r\n    \"phoneNumber\": \"{{registration_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{registration_admin_token}}/user/register?mode=VERIFY",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.5",
										"{{customer_context}}",
										"{{admin_context}}",
										"{{registration_admin_token}}",
										"user",
										"register"
									],
									"query": [
										{
											"key": "mode",
											"value": "VERIFY"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "610",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:28:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"responseBodyDto\":{\"phoneNumber\":\"+9233312312929\",\"token\":\"df294970a63c495ca1507c162125fb33\",\"authenticatedUser\":{\"id\":55714,\"personId\":184042,\"firstName\":\"Maaz929\",\"lastName\":\"VD\",\"gender\":\"Male\",\"genderId\":1,\"salutation\":\"Mr. VD\",\"enabled\":true,\"passport\":[],\"dateOfBirth\":\"\",\"personPhoneNumbers\":[{\"id\":3148787,\"phoneNumber\":\"+9233312312929\"}],\"username\":\"maaz929@vd.com\",\"token\":\"df294970a63c495ca1507c162125fb33\",\"isChangedPassword\":false,\"userPreferences\":[{\"key\":\"company\",\"value\":\"VistaJet\"},{\"key\":\"subscription\",\"value\":\"true\"}]}}}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "618b4a45-8c10-4966-960e-be57684bb38d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "145588f6-ad93-4c8f-ba40-07bc7abdbeef",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Avail Membership - done",
			"item": [
				{
					"name": "Bank Transfer",
					"item": [
						{
							"name": "Admin Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9778da9a-b920-4594-8ec7-5d87072c73bd",
										"type": "text/javascript",
										"exec": [
											"var data = pm.globals.get(\"admin_context\");",
											"var admin_username = \"customerappadmin\";",
											"",
											"var jsonData = xml2Json(responseBody);",
											"tests[\"Context is \" + data] = jsonData.vjResponse.context === data;",
											"tests[\"Username is \" + admin_username] = jsonData.vjResponse.username === admin_username;",
											"",
											"pm.environment.set(\"membershipBT_admin_token\", jsonData.vjResponse.token);",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {},
										"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip",
											"name": "Content-Encoding",
											"description": "The type of encoding used on the data."
										},
										{
											"key": "Content-Length",
											"value": "162",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/xml",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:30:22 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><vjResponse><context>customerappadmin</context><token>8713494aa39b451094e55fa5f87945ed</token><username>customerappadmin</username></vjResponse>"
								}
							]
						},
						{
							"name": "Auth Admin Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5e2e6f17-8802-436b-b92e-fbbe5f99d62f",
										"type": "text/javascript",
										"exec": [
											"// Device Push ID randomly generated",
											"var uuid = require('uuid');",
											"pm.globals.set('devicePushId', uuid.v4());",
											"",
											"// Encryptor.java code to JavaScript",
											"var email = pm.globals.get(\"admin_context\");",
											"var password = pm.globals.get(\"admin_password\");",
											"var token = pm.environment.get(\"membershipBT_admin_token\");",
											"",
											"encrypt (email + \"\\\\+\" + password, token);",
											"",
											"function  encrypt (user_pass, token){",
											"    // var salt = hexStringToByte (\"f42832ab4ba1cc43\");",
											"    // var iterationCount = 20;",
											"    ",
											"    var password = CryptoJS.enc.Utf8.parse(token);",
											"    ",
											"    var salt = CryptoJS.enc.Hex.parse(\"f42832ab4ba1cc43\");",
											"    var iterations = 20;",
											"    ",
											"    // PBE according to PKCS#5 v1.5 (in other words: PBKDF1)",
											"    var md5 = CryptoJS.algo.MD5.create();",
											"    md5.update(password);",
											"    md5.update(salt);",
											"    var result = md5.finalize();",
											"    md5.reset();",
											"    for(var i = 1; i < iterations; i++) {",
											"        md5.update(result);",
											"        result = md5.finalize();",
											"        md5.reset();",
											"    }",
											"    ",
											"    // splitting key and IV",
											"    var key = CryptoJS.lib.WordArray.create(result.words.slice(0, 2));",
											"    var iv = CryptoJS.lib.WordArray.create(result.words.slice(2, 4));",
											"    ",
											"    var encrypted = CryptoJS.DES.encrypt(user_pass, key, {",
											"        iv: iv",
											"    });",
											"    ",
											"    pm.globals.set('membershipBT_admin_credentials', token + encrypted.ciphertext.toString(CryptoJS.enc.Base64));",
											"",
											"    // enchex.innerHTML = encrypted.ciphertext.toString();",
											"    // encbase64.innerHTML = encrypted.ciphertext.toString(CryptoJS.enc.Base64);",
											"} ",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ee3d899e-2abb-4f77-b202-68981fa39a5d",
										"type": "text/javascript",
										"exec": [
											"var data1 = [\"0\", \"OK\", false];",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeader.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.responseHeader.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.responseHeader.isError === data1[2];",
											"",
											"var data2 = [true, false];",
											"",
											"tests[\"Success is \" + data2[0]] = jsonData.responseBody.success === data2[0];",
											"tests[\"Password should be changed: \" + data2[1]] = jsonData.responseBody.mustChangePassword === data2[1];",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"credentials\": \"{{membershipBT_admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}\r\n"
								},
								"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"credentials\": \"{{membershipBT_admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}\r\n"
										},
										"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "127",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:30:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"responseHeader\":{\"statusCode\":\"0\",\"message\":\"OK\",\"isError\":false},\"responseBody\":{\"success\":true,\"mustChangePassword\":false}}"
								}
							]
						},
						{
							"name": "REGISTER User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c809fba1-6442-49ba-9eca-7965d02a920d",
										"type": "text/javascript",
										"exec": [
											"var data1 = [0, \"OK\", false];",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
											"",
											"var data2 = [pm.environment.get(\"membershipBT_phone\"), pm.environment.get(\"membershipBT_admin_token\"), pm.environment.get(\"membershipBT_username\"), pm.environment.get(\"membershipBT_firstName\")];",
											"",
											"tests[\"Phone Number is \" + data2[0]] = jsonData.responseBodyDto.phoneNumber === data2[0];",
											"tests[\"Token is \" + data2[1]] = jsonData.responseBodyDto.token === data2[1];",
											"tests[\"Email is \" + data2[2]] = jsonData.responseBodyDto.username === data2[2];",
											"tests[\"First Name is \" + data2[3]] = jsonData.responseBodyDto.firstName === data2[3];",
											"",
											"",
											"pm.environment.set(\"membershipBT_externalAppUserId\", jsonData.responseBodyDto.externalAppUserId);",
											"pm.environment.set(\"membershipBT_personId\", jsonData.responseBodyDto.personId);",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d892eb0a-3fe7-40e3-8375-2865acf0dcde",
										"type": "text/javascript",
										"exec": [
											"var rand = Math.floor((Math.random() * 1000) + 10);",
											"",
											"var firstName = \"Maaz\" + rand;",
											"var username = \"maaz\" + rand + \"@vd.com\";",
											"var phone = \"+9233312312\" + rand;",
											"",
											"pm.environment.set(\"membershipBT_firstName\", firstName);",
											"pm.environment.set(\"membershipBT_username\", username);",
											"pm.environment.set(\"membershipBT_phone\", phone);",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"{{membershipBT_username}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"salutation\": \"Mr.\",\r\n    \"firstName\": \"{{membershipBT_firstName}}\",\r\n    \"lastName\": \"VD\",\r\n    \"gender\": \"m\",\r\n    \"phoneNumber\": \"{{membershipBT_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"deviceType\": \"iso\",\r\n    \"osVersion\": \"9.3.2\",\r\n    \"city\": \"Karachi\",\r\n  \"countryName\": \"Pakistan\",\r\n  \"token\" : \"{{membershipBT_admin_token}}\",\r\n    \"subscription\": \"true\",\r\n    \"company\": \"VistaJet\",\r\n    \"registrationReason\": 2,\r\n    \"source\": \"customerapp\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipBT_admin_token}}/user/register?mode=REGISTER",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.5",
										"{{customer_context}}",
										"{{admin_context}}",
										"{{membershipBT_admin_token}}",
										"user",
										"register"
									],
									"query": [
										{
											"key": "mode",
											"value": "REGISTER"
										}
									]
								}
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"{{membershipBT_username}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"salutation\": \"Mr.\",\r\n    \"firstName\": \"{{membershipBT_firstName}}\",\r\n    \"lastName\": \"VD\",\r\n    \"gender\": \"m\",\r\n    \"phoneNumber\": \"{{membershipBT_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"deviceType\": \"iso\",\r\n    \"osVersion\": \"9.3.2\",\r\n    \"city\": \"Karachi\",\r\n  \"countryName\": \"Pakistan\",\r\n  \"token\" : \"{{membershipBT_admin_token}}\",\r\n    \"subscription\": \"true\",\r\n    \"company\": \"VistaJet\",\r\n    \"registrationReason\": 2,\r\n    \"source\": \"customerapp\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipBT_admin_token}}/user/register?mode=REGISTER",
											"host": [
												"{{url}}"
											],
											"path": [
												"extranetServices",
												"1.5",
												"{{customer_context}}",
												"{{admin_context}}",
												"{{membershipBT_admin_token}}",
												"user",
												"register"
											],
											"query": [
												{
													"key": "mode",
													"value": "REGISTER"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "347",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:30:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=99",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"responseBodyDto\":{\"externalAppUserId\":55716,\"personId\":184044,\"phoneNumber\":\"+9233312312214\",\"token\":\"8713494aa39b451094e55fa5f87945ed\",\"username\":\"maaz214@vd.com\",\"salutation\":\"Mr.\",\"firstName\":\"Maaz214\",\"lastName\":\"VD\",\"gender\":\"m\",\"city\":\"Karachi\",\"countryName\":\"Pakistan\"}}"
								}
							]
						},
						{
							"name": "Verification Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d076e8fe-8864-45d9-a45e-44940f4aadbc",
										"type": "text/javascript",
										"exec": [
											"var jsonData = xml2Json(responseBody);",
											"",
											"if(jsonData.users.user.length > 1)",
											"    pm.environment.set(\"verificationCode\", jsonData.users.user[0].verificationCode);",
											"else",
											"    pm.environment.set(\"verificationCode\", jsonData.users.user.verificationCode);",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{membershipBT_username}}",
									"host": [
										"{{gv_url}}"
									],
									"path": [
										"1",
										"customerApp",
										"getUnverifiedCodeForUser",
										""
									],
									"query": [
										{
											"key": "email",
											"value": "{{membershipBT_username}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{membershipBT_username}}",
											"host": [
												"{{gv_url}}"
											],
											"path": [
												"1",
												"customerApp",
												"getUnverifiedCodeForUser",
												""
											],
											"query": [
												{
													"key": "email",
													"value": "{{membershipBT_username}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip",
											"name": "Content-Encoding",
											"description": "The type of encoding used on the data."
										},
										{
											"key": "Content-Type",
											"value": "application/xml",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:30:58 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										}
									],
									"cookie": [],
									"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><users><user><expiryTime>2018-05-23T07:30:54.733Z</expiryTime><phoneNumber>+9233312312214</phoneNumber><verificationCode>OE7UYY</verificationCode></user></users>"
								}
							]
						},
						{
							"name": "VERIFY User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79a87e1c-c8c1-4e7f-aeef-d21b453a3547",
										"type": "text/javascript",
										"exec": [
											"var data1 = [0, \"OK\", false];",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
											"",
											"var data2 = [pm.environment.get(\"membershipBT_phone\"), pm.environment.get(\"membershipBT_externalAppUserId\"), pm.environment.get(\"membershipBT_personId\"), pm.environment.get(\"membershipBT_firstName\"), pm.environment.get(\"membershipBT_username\")];",
											"",
											"tests[\"Phone Number is \" + data2[0]] = jsonData.responseBodyDto.phoneNumber === data2[0];",
											"tests[\"UserId is \" + data2[1]] = jsonData.responseBodyDto.authenticatedUser.id === data2[1];",
											"tests[\"PersonId is \" + data2[2]] = jsonData.responseBodyDto.authenticatedUser.personId === data2[2];",
											"tests[\"First Name is \" + data2[3]] = jsonData.responseBodyDto.authenticatedUser.firstName === data2[3];",
											"tests[\"Email is \" + data2[4]] = jsonData.responseBodyDto.authenticatedUser.username === data2[4];",
											"",
											"pm.environment.set(\"membershipBT_cust_token\", jsonData.responseBodyDto.token);",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "825b1821-49f3-4b55-b1cf-130bcdced4a2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalAppUserId\": {{membershipBT_externalAppUserId}},\r\n    \"phoneNumber\": \"{{membershipBT_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipBT_admin_token}}/user/register?mode=VERIFY",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.5",
										"{{customer_context}}",
										"{{admin_context}}",
										"{{membershipBT_admin_token}}",
										"user",
										"register"
									],
									"query": [
										{
											"key": "mode",
											"value": "VERIFY"
										}
									]
								}
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"externalAppUserId\": {{membershipBT_externalAppUserId}},\r\n    \"phoneNumber\": \"{{membershipBT_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipBT_admin_token}}/user/register?mode=VERIFY",
											"host": [
												"{{url}}"
											],
											"path": [
												"extranetServices",
												"1.5",
												"{{customer_context}}",
												"{{admin_context}}",
												"{{membershipBT_admin_token}}",
												"user",
												"register"
											],
											"query": [
												{
													"key": "mode",
													"value": "VERIFY"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "610",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:30:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"responseBodyDto\":{\"phoneNumber\":\"+9233312312214\",\"token\":\"59790162651341f2863a98fa4b7f9ba2\",\"authenticatedUser\":{\"id\":55716,\"personId\":184044,\"firstName\":\"Maaz214\",\"lastName\":\"VD\",\"gender\":\"Male\",\"genderId\":1,\"salutation\":\"Mr. VD\",\"enabled\":true,\"passport\":[],\"dateOfBirth\":\"\",\"personPhoneNumbers\":[{\"id\":3148789,\"phoneNumber\":\"+9233312312214\"}],\"username\":\"maaz214@vd.com\",\"token\":\"59790162651341f2863a98fa4b7f9ba2\",\"isChangedPassword\":false,\"userPreferences\":[{\"key\":\"company\",\"value\":\"VistaJet\"},{\"key\":\"subscription\",\"value\":\"true\"}]}}}"
								}
							]
						},
						{
							"name": "Sign Up",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "296da033-cf62-4fb9-99bc-ed912cd4d45b",
										"type": "text/javascript",
										"exec": [
											"var data1 = [\"0\", \"OK\", \"false\"];",
											"",
											"var jsonData = xml2Json(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.signUpResponseBody.responseHeader.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.signUpResponseBody.responseHeader.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.signUpResponseBody.responseHeader.isError === data1[2];",
											"",
											"var data2 = [\"1\", \"9\", \"1\"];",
											"",
											"tests[\"Membership status is \" + data2[0]] = jsonData.signUpResponseBody.statusMembership === data2[0];",
											"tests[\"Access type ID is \" + data2[1]] = jsonData.signUpResponseBody.accessTypeId === data2[1];",
											"tests[\"Membership type ID is \" + data2[2]] = jsonData.signUpResponseBody.membershipTypeId === data2[2];",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SignUpDto>\r\n  <addressableName/>\r\n  <countryCode>AFG</countryCode>\r\n  <city>London</city>\r\n  <state/>\r\n  <vatNumber/>\r\n  <postCode/>\r\n  <billingAddress>52 Charles Street</billingAddress>\r\n  <paymentOptionId>1</paymentOptionId>\r\n  <creditCardAlias/>\r\n  <cvvCode/>\r\n  <memberShipTypeId>1</memberShipTypeId>\r\n</SignUpDto>\r\n"
								},
								"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{membershipBT_cust_token}}/signup"
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SignUpDto>\r\n  <addressableName/>\r\n  <countryCode>AFG</countryCode>\r\n  <city>London</city>\r\n  <state/>\r\n  <vatNumber/>\r\n  <postCode/>\r\n  <billingAddress>52 Charles Street</billingAddress>\r\n  <paymentOptionId>1</paymentOptionId>\r\n  <creditCardAlias/>\r\n  <cvvCode/>\r\n  <memberShipTypeId>1</memberShipTypeId>\r\n</SignUpDto>\r\n"
										},
										"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{membershipBT_cust_token}}/signup"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip",
											"name": "Content-Encoding",
											"description": "The type of encoding used on the data."
										},
										{
											"key": "Content-Type",
											"value": "application/xml",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:31:10 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=99",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><signUpResponseBody><responseHeader><isError>false</isError><message>OK</message><statusCode>0</statusCode></responseHeader><bankDetails><currency>USD</currency><referenceNumber>1526801473070</referenceNumber><totalAmount>10000</totalAmount><bankName>Bank of Valletta</bankName><iban>MT14VALL22013000000040022069005</iban><swiftCode>VALLMTMT</swiftCode><to>VistaJet Online and Mobile Services Limited</to></bankDetails><statusMembership>1</statusMembership><accessTypeId>9</accessTypeId><accountId>57874</accountId><membershipTypeId>1</membershipTypeId></signUpResponseBody>"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ed2ee81a-af00-4c5e-a336-630562893534",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "76d5570c-bd44-4dc4-b9c7-cd7e83adb8ca",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Credit Card",
					"item": [
						{
							"name": "Admin Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27af343d-31b6-4484-8df2-b54441a20d33",
										"type": "text/javascript",
										"exec": [
											"var data = pm.globals.get(\"admin_context\");",
											"var admin_username = \"customerappadmin\";",
											"",
											"var jsonData = xml2Json(responseBody);",
											"tests[\"Context is \" + data] = jsonData.vjResponse.context === data;",
											"tests[\"Username is \" + admin_username] = jsonData.vjResponse.username === admin_username;",
											"",
											"pm.environment.set(\"membershipCC_admin_token\", jsonData.vjResponse.token);",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {},
										"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip",
											"name": "Content-Encoding",
											"description": "The type of encoding used on the data."
										},
										{
											"key": "Content-Length",
											"value": "162",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/xml",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:31:22 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><vjResponse><context>customerappadmin</context><token>341b0f6219364a64ba4cfdb34d81f9e8</token><username>customerappadmin</username></vjResponse>"
								}
							]
						},
						{
							"name": "Auth Admin Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "354d5488-f93d-482b-8460-eb9414488446",
										"type": "text/javascript",
										"exec": [
											"// Device Push ID randomly generated",
											"var uuid = require('uuid');",
											"pm.globals.set('devicePushId', uuid.v4());",
											"",
											"// Encryptor.java code to JavaScript",
											"var email = pm.globals.get(\"admin_context\");",
											"var password = pm.globals.get(\"admin_password\");",
											"var token = pm.environment.get(\"membershipCC_admin_token\");",
											"",
											"encrypt (email + \"\\\\+\" + password, token);",
											"",
											"function  encrypt (user_pass, token){",
											"    // var salt = hexStringToByte (\"f42832ab4ba1cc43\");",
											"    // var iterationCount = 20;",
											"    ",
											"    var password = CryptoJS.enc.Utf8.parse(token);",
											"    ",
											"    var salt = CryptoJS.enc.Hex.parse(\"f42832ab4ba1cc43\");",
											"    var iterations = 20;",
											"    ",
											"    // PBE according to PKCS#5 v1.5 (in other words: PBKDF1)",
											"    var md5 = CryptoJS.algo.MD5.create();",
											"    md5.update(password);",
											"    md5.update(salt);",
											"    var result = md5.finalize();",
											"    md5.reset();",
											"    for(var i = 1; i < iterations; i++) {",
											"        md5.update(result);",
											"        result = md5.finalize();",
											"        md5.reset();",
											"    }",
											"    ",
											"    // splitting key and IV",
											"    var key = CryptoJS.lib.WordArray.create(result.words.slice(0, 2));",
											"    var iv = CryptoJS.lib.WordArray.create(result.words.slice(2, 4));",
											"    ",
											"    var encrypted = CryptoJS.DES.encrypt(user_pass, key, {",
											"        iv: iv",
											"    });",
											"    ",
											"    pm.globals.set('membershipCC_admin_credentials', token + encrypted.ciphertext.toString(CryptoJS.enc.Base64));",
											"",
											"    // enchex.innerHTML = encrypted.ciphertext.toString();",
											"    // encbase64.innerHTML = encrypted.ciphertext.toString(CryptoJS.enc.Base64);",
											"} ",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "58025338-4a36-4d27-a8c2-7492cb3cf7a4",
										"type": "text/javascript",
										"exec": [
											"var data1 = [\"0\", \"OK\", false];",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeader.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.responseHeader.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.responseHeader.isError === data1[2];",
											"",
											"var data2 = [true, false];",
											"",
											"tests[\"Success is \" + data2[0]] = jsonData.responseBody.success === data2[0];",
											"tests[\"Password should be changed: \" + data2[1]] = jsonData.responseBody.mustChangePassword === data2[1];",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"credentials\": \"{{membershipCC_admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}\r\n"
								},
								"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"credentials\": \"{{membershipCC_admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}\r\n"
										},
										"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "127",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:31:32 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"responseHeader\":{\"statusCode\":\"0\",\"message\":\"OK\",\"isError\":false},\"responseBody\":{\"success\":true,\"mustChangePassword\":false}}"
								}
							]
						},
						{
							"name": "REGISTER User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7161c09-167b-4f05-9d7a-635c45c27070",
										"type": "text/javascript",
										"exec": [
											"var data1 = [0, \"OK\", false];",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
											"",
											"var data2 = [pm.environment.get(\"membershipCC_phone\"), pm.environment.get(\"membershipCC_admin_token\"), pm.environment.get(\"membershipCC_username\"), pm.environment.get(\"membershipCC_firstName\")];",
											"",
											"tests[\"Phone Number is \" + data2[0]] = jsonData.responseBodyDto.phoneNumber === data2[0];",
											"tests[\"Token is \" + data2[1]] = jsonData.responseBodyDto.token === data2[1];",
											"tests[\"Email is \" + data2[2]] = jsonData.responseBodyDto.username === data2[2];",
											"tests[\"First Name is \" + data2[3]] = jsonData.responseBodyDto.firstName === data2[3];",
											"",
											"",
											"pm.environment.set(\"membershipCC_externalAppUserId\", jsonData.responseBodyDto.externalAppUserId);",
											"pm.environment.set(\"membershipCC_personId\", jsonData.responseBodyDto.personId);",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e3742b94-88e1-4440-8520-6ea66c9c5fcd",
										"type": "text/javascript",
										"exec": [
											"var rand = Math.floor((Math.random() * 1000) + 10);",
											"",
											"var firstName = \"Maaz\" + rand;",
											"var username = \"maaz\" + rand + \"@vd.com\";",
											"var phone = \"+9233312312\" + rand;",
											"",
											"pm.environment.set(\"membershipCC_firstName\", firstName);",
											"pm.environment.set(\"membershipCC_username\", username);",
											"pm.environment.set(\"membershipCC_phone\", phone);",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"{{membershipCC_username}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"salutation\": \"Mr.\",\r\n    \"firstName\": \"{{membershipCC_firstName}}\",\r\n    \"lastName\": \"VD\",\r\n    \"gender\": \"m\",\r\n    \"phoneNumber\": \"{{membershipCC_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"deviceType\": \"iso\",\r\n    \"osVersion\": \"9.3.2\",\r\n    \"city\": \"Karachi\",\r\n  \"countryName\": \"Pakistan\",\r\n  \"token\" : \"{{membershipCC_admin_token}}\",\r\n    \"subscription\": \"true\",\r\n    \"company\": \"VistaJet\",\r\n    \"registrationReason\": 2,\r\n    \"source\": \"customerapp\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipCC_admin_token}}/user/register?mode=REGISTER",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.5",
										"{{customer_context}}",
										"{{admin_context}}",
										"{{membershipCC_admin_token}}",
										"user",
										"register"
									],
									"query": [
										{
											"key": "mode",
											"value": "REGISTER"
										}
									]
								}
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"{{membershipCC_username}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"salutation\": \"Mr.\",\r\n    \"firstName\": \"{{membershipCC_firstName}}\",\r\n    \"lastName\": \"VD\",\r\n    \"gender\": \"m\",\r\n    \"phoneNumber\": \"{{membershipCC_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"deviceType\": \"iso\",\r\n    \"osVersion\": \"9.3.2\",\r\n    \"city\": \"Karachi\",\r\n  \"countryName\": \"Pakistan\",\r\n  \"token\" : \"{{membershipCC_admin_token}}\",\r\n    \"subscription\": \"true\",\r\n    \"company\": \"VistaJet\",\r\n    \"registrationReason\": 2,\r\n    \"source\": \"customerapp\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipCC_admin_token}}/user/register?mode=REGISTER",
											"host": [
												"{{url}}"
											],
											"path": [
												"extranetServices",
												"1.5",
												"{{customer_context}}",
												"{{admin_context}}",
												"{{membershipCC_admin_token}}",
												"user",
												"register"
											],
											"query": [
												{
													"key": "mode",
													"value": "REGISTER"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "347",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:31:36 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=99",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"responseBodyDto\":{\"externalAppUserId\":55717,\"personId\":184045,\"phoneNumber\":\"+9233312312919\",\"token\":\"341b0f6219364a64ba4cfdb34d81f9e8\",\"username\":\"maaz919@vd.com\",\"salutation\":\"Mr.\",\"firstName\":\"Maaz919\",\"lastName\":\"VD\",\"gender\":\"m\",\"city\":\"Karachi\",\"countryName\":\"Pakistan\"}}"
								}
							]
						},
						{
							"name": "Verification Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9f5f8b5-e576-4aa6-8fa4-bcaefa3893ec",
										"type": "text/javascript",
										"exec": [
											"var jsonData = xml2Json(responseBody);",
											"",
											"if(jsonData.users.user.length > 1)",
											"    pm.environment.set(\"verificationCode\", jsonData.users.user[0].verificationCode);",
											"else",
											"    pm.environment.set(\"verificationCode\", jsonData.users.user.verificationCode);",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{membershipCC_username}}",
									"host": [
										"{{gv_url}}"
									],
									"path": [
										"1",
										"customerApp",
										"getUnverifiedCodeForUser",
										""
									],
									"query": [
										{
											"key": "email",
											"value": "{{membershipCC_username}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{membershipCC_username}}",
											"host": [
												"{{gv_url}}"
											],
											"path": [
												"1",
												"customerApp",
												"getUnverifiedCodeForUser",
												""
											],
											"query": [
												{
													"key": "email",
													"value": "{{membershipCC_username}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip",
											"name": "Content-Encoding",
											"description": "The type of encoding used on the data."
										},
										{
											"key": "Content-Type",
											"value": "application/xml",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:31:51 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										}
									],
									"cookie": [],
									"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><users><user><expiryTime>2018-05-23T07:31:43.161Z</expiryTime><phoneNumber>+9233312312919</phoneNumber><verificationCode>MLIMAY</verificationCode></user></users>"
								}
							]
						},
						{
							"name": "VERIFY User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b46559c-2099-44f6-945f-34d5e87c3680",
										"type": "text/javascript",
										"exec": [
											"var data1 = [0, \"OK\", false];",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
											"",
											"var data2 = [pm.environment.get(\"membershipCC_phone\"), pm.environment.get(\"membershipCC_externalAppUserId\"), pm.environment.get(\"membershipCC_personId\"), pm.environment.get(\"membershipCC_firstName\"), pm.environment.get(\"membershipCC_username\")];",
											"",
											"tests[\"Phone Number is \" + data2[0]] = jsonData.responseBodyDto.phoneNumber === data2[0];",
											"tests[\"UserId is \" + data2[1]] = jsonData.responseBodyDto.authenticatedUser.id === data2[1];",
											"tests[\"PersonId is \" + data2[2]] = jsonData.responseBodyDto.authenticatedUser.personId === data2[2];",
											"tests[\"First Name is \" + data2[3]] = jsonData.responseBodyDto.authenticatedUser.firstName === data2[3];",
											"tests[\"Email is \" + data2[4]] = jsonData.responseBodyDto.authenticatedUser.username === data2[4];",
											"",
											"pm.environment.set(\"membershipCC_cust_token\", jsonData.responseBodyDto.token);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "825b1821-49f3-4b55-b1cf-130bcdced4a2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalAppUserId\": {{membershipCC_externalAppUserId}},\r\n    \"phoneNumber\": \"{{membershipCC_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipCC_admin_token}}/user/register?mode=VERIFY",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.5",
										"{{customer_context}}",
										"{{admin_context}}",
										"{{membershipCC_admin_token}}",
										"user",
										"register"
									],
									"query": [
										{
											"key": "mode",
											"value": "VERIFY"
										}
									]
								}
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"externalAppUserId\": {{membershipCC_externalAppUserId}},\r\n    \"phoneNumber\": \"{{membershipCC_phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{membershipCC_admin_token}}/user/register?mode=VERIFY",
											"host": [
												"{{url}}"
											],
											"path": [
												"extranetServices",
												"1.5",
												"{{customer_context}}",
												"{{admin_context}}",
												"{{membershipCC_admin_token}}",
												"user",
												"register"
											],
											"query": [
												{
													"key": "mode",
													"value": "VERIFY"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "610",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:31:52 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"responseBodyDto\":{\"phoneNumber\":\"+9233312312919\",\"token\":\"183cddc191ea478780a3b16b37525081\",\"authenticatedUser\":{\"id\":55717,\"personId\":184045,\"firstName\":\"Maaz919\",\"lastName\":\"VD\",\"gender\":\"Male\",\"genderId\":1,\"salutation\":\"Mr. VD\",\"enabled\":true,\"passport\":[],\"dateOfBirth\":\"\",\"personPhoneNumbers\":[{\"id\":3148790,\"phoneNumber\":\"+9233312312919\"}],\"username\":\"maaz919@vd.com\",\"token\":\"183cddc191ea478780a3b16b37525081\",\"isChangedPassword\":false,\"userPreferences\":[{\"key\":\"company\",\"value\":\"VistaJet\"},{\"key\":\"subscription\",\"value\":\"true\"}]}}}"
								}
							]
						},
						{
							"name": "Add Credit Card",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aacbd084-0dc8-4c68-8e14-6f5197cce0ea",
										"type": "text/javascript",
										"exec": [
											"var data1 = [0, \"OK\", false];",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
											"",
											"var objectName = \"alias\";",
											"",
											"tests['Response contains ' + objectName] = _.has(jsonData.creditCardListItem, objectName);",
											"",
											"pm.environment.set(\"cc_alias\", jsonData.creditCardListItem.alias);",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"creditCardNumber\": \"4242424242424242\",\r\n    \"expiryDate\": \"11/21\",\r\n    \"cvv\": {{cvv}},\r\n    \"type\": \"Business\",\r\n    \"isDefault\": 0\r\n}"
								},
								"url": "{{url}}/extranetServices/1.6/{{customer_context}}/{{customer_context}}/{{membershipCC_cust_token}}/creditCardManagement"
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"creditCardNumber\": \"4242424242424242\",\r\n    \"expiryDate\": \"11/21\",\r\n    \"cvv\": {{cvv}},\r\n    \"type\": \"Business\",\r\n    \"isDefault\": 0\r\n}"
										},
										"url": "{{url}}/extranetServices/1.6/{{customer_context}}/{{customer_context}}/{{membershipCC_cust_token}}/creditCardManagement"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "250",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:32:01 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=99",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"creditCardListItem\":{\"alias\":\"FB513D12-45A5-4EE9-B56F-B9505291294A\",\"cardBrandId\":5,\"type\":\"Business\",\"cardNumberLastFour\":\"4242\",\"isDefault\":1,\"expiryDate\":\"11/21\",\"cardFee\":0.0}}"
								}
							]
						},
						{
							"name": "Sign Up",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ef5edda-8b8f-4803-84ae-8989ab78f1b0",
										"type": "text/javascript",
										"exec": [
											"var data1 = [\"0\", \"OK\", \"false\"];",
											"",
											"var jsonData = xml2Json(responseBody);",
											"tests[\"Status Code is \" + data1[0]] = jsonData.signUpResponseBody.responseHeader.statusCode === data1[0];",
											"tests[\"Message is correct\"] = jsonData.signUpResponseBody.responseHeader.message === data1[1];",
											"tests[\"isError is \" + data1[2]] = jsonData.signUpResponseBody.responseHeader.isError === data1[2];",
											"",
											"var data2 = [\"2\", \"9\", \"1\"];",
											"",
											"tests[\"Membership status is \" + data2[0]] = jsonData.signUpResponseBody.statusMembership === data2[0];",
											"tests[\"Access type ID is \" + data2[1]] = jsonData.signUpResponseBody.accessTypeId === data2[1];",
											"tests[\"Membership type ID is \" + data2[2]] = jsonData.signUpResponseBody.membershipTypeId === data2[2];",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SignUpDto>\r\n    <addressableName/>\r\n    <countryCode>AFG</countryCode>\r\n    <city>London</city>\r\n    <state/>\r\n    <vatNumber/>\r\n    <postCode/>\r\n    <billingAddress>52 Charles Street</billingAddress>\r\n    <paymentOptionId>2</paymentOptionId>\r\n    <creditCardAlias>{{cc_alias}}</creditCardAlias>\r\n    <cvvCode>{{cvv}}</cvvCode>\r\n    <memberShipTypeId>1</memberShipTypeId>\r\n</SignUpDto>"
								},
								"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{membershipCC_cust_token}}/signup"
							},
							"response": [
								{
									"name": "Ideal case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SignUpDto>\r\n    <addressableName/>\r\n    <countryCode>AFG</countryCode>\r\n    <city>London</city>\r\n    <state/>\r\n    <vatNumber/>\r\n    <postCode/>\r\n    <billingAddress>52 Charles Street</billingAddress>\r\n    <paymentOptionId>2</paymentOptionId>\r\n    <creditCardAlias>{{cc_alias}}</creditCardAlias>\r\n    <cvvCode>{{cvv}}</cvvCode>\r\n    <memberShipTypeId>1</memberShipTypeId>\r\n</SignUpDto>"
										},
										"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{membershipCC_cust_token}}/signup"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip",
											"name": "Content-Encoding",
											"description": "The type of encoding used on the data."
										},
										{
											"key": "Content-Type",
											"value": "application/xml",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Sun, 20 May 2018 07:32:25 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=98",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Apache-Coyote/1.1",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><signUpResponseBody><responseHeader><isError>false</isError><message>OK</message><statusCode>0</statusCode></responseHeader><creditCardDetails><currency>USD</currency><referenceNumber>1526801536434</referenceNumber><totalAmount>10000</totalAmount><phoneNumber>+44 (0) 207 0 605 700</phoneNumber></creditCardDetails><statusMembership>2</statusMembership><accessTypeId>9</accessTypeId><accountId>57875</accountId><membershipTypeId>1</membershipTypeId></signUpResponseBody>"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ed2ee81a-af00-4c5e-a336-630562893534",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "76d5570c-bd44-4dc4-b9c7-cd7e83adb8ca",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "082427ed-1c37-4367-aeed-f2a5566e57c8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e7a538de-9600-4bca-8eda-fdbbd0ff9350",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Login - done",
			"item": [
				{
					"name": "Customer Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2a4f7aa-2df0-4157-b2a5-203706d51266",
								"type": "text/javascript",
								"exec": [
									"var data1 = pm.globals.get(\"customer_context\");",
									"var data2 = pm.environment.get(\"username\");",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Context is \" + data1] = jsonData.vjResponse.context === data1;",
									"tests[\"Username is \" + data2] = jsonData.vjResponse.username === data2;",
									"",
									"pm.environment.set(\"cust_token\", jsonData.vjResponse.token);",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c2b22a9b-c8cc-4ff5-bf45-e685e6517cc7",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": "{{url}}/extranetServices/1.1/user/{{customer_context}}/{{username}}/token"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{url}}/extranetServices/1.1/user/{{customer_context}}/{{username}}/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:37:04 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><vjResponse><context>customerapp</context><token>81ab2c63c1d842149c75081d4542113e</token><username>maaz@d.com</username></vjResponse>"
						}
					]
				},
				{
					"name": "Auth Customer Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5b5b9415-936c-44e8-81a4-03c0d377e8d5",
								"type": "text/javascript",
								"exec": [
									"// Device Push ID randomly generated",
									"var uuid = require('uuid');",
									"pm.globals.set('devicePushId', uuid.v4());",
									"",
									"// Encryptor.java code to JavaScript",
									"var email = pm.environment.get(\"username\");",
									"var password = pm.globals.get(\"password\");",
									"var token = pm.environment.get(\"cust_token\");",
									"",
									"encrypt (email + \"\\\\+\" + password, token);",
									"",
									"function  encrypt (user_pass, token){",
									"    // var salt = hexStringToByte (\"f42832ab4ba1cc43\");",
									"    // var iterationCount = 20;",
									"    ",
									"    var password = CryptoJS.enc.Utf8.parse(token);",
									"    ",
									"    var salt = CryptoJS.enc.Hex.parse(\"f42832ab4ba1cc43\");",
									"    var iterations = 20;",
									"    ",
									"    // PBE according to PKCS#5 v1.5 (in other words: PBKDF1)",
									"    var md5 = CryptoJS.algo.MD5.create();",
									"    md5.update(password);",
									"    md5.update(salt);",
									"    var result = md5.finalize();",
									"    md5.reset();",
									"    for(var i = 1; i < iterations; i++) {",
									"        md5.update(result);",
									"        result = md5.finalize();",
									"        md5.reset();",
									"    }",
									"    ",
									"    // splitting key and IV",
									"    var key = CryptoJS.lib.WordArray.create(result.words.slice(0, 2));",
									"    var iv = CryptoJS.lib.WordArray.create(result.words.slice(2, 4));",
									"    ",
									"    var encrypted = CryptoJS.DES.encrypt(user_pass, key, {",
									"        iv: iv",
									"    });",
									"    ",
									"    pm.globals.set('customer_credentials', token + encrypted.ciphertext.toString(CryptoJS.enc.Base64));",
									"",
									"    // enchex.innerHTML = encrypted.ciphertext.toString();",
									"    // encbase64.innerHTML = encrypted.ciphertext.toString(CryptoJS.enc.Base64);",
									"} ",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "10cf15ca-e1af-43b0-8ad6-74700e53ec20",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeader.isError === data1[2];",
									"",
									"// var data1 = pm.globals.get(\"customer_context\");",
									"// var data2 = pm.environment.get(\"username\");",
									"",
									"// tests[\"Context is \" + data1] = jsonData.vjResponse.context === data1;",
									"// tests[\"Username is \" + data2] = jsonData.vjResponse.username === data2;",
									"",
									"pm.environment.set(\"externalAppUserId\", jsonData.responseBody.authenticatedUser.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"credentials\": \"{{customer_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"{{phone}}\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}"
						},
						"url": "{{url}}/extranetServices/1.6/user/{{customer_context}}/{{username}}/authenticate/"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"credentials\": \"{{customer_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"{{phone}}\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}"
								},
								"url": "{{url}}/extranetServices/1.6/user/{{customer_context}}/{{username}}/authenticate/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "257",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:38:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeader\":{\"statusCode\":\"0\",\"message\":\"OK\",\"isError\":false},\"responseBody\":{\"success\":false,\"mustChangePassword\":false,\"authenticatedUser\":{\"id\":54719,\"verificationStatusCode\":3,\"verificationStatusDescription\":\"Notification has been sent to user\"}}}"
						}
					]
				},
				{
					"name": "Verification Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0661f80d-5455-4a0f-b8c3-78b0c7c176e4",
								"type": "text/javascript",
								"exec": [
									"var jsonData = xml2Json(responseBody);",
									"",
									"if(jsonData.users.user.length > 1)",
									"    pm.environment.set(\"verificationCode\", jsonData.users.user[0].verificationCode);",
									"else",
									"    pm.environment.set(\"verificationCode\", jsonData.users.user.verificationCode);",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{username}}",
							"host": [
								"{{gv_url}}"
							],
							"path": [
								"1",
								"customerApp",
								"getUnverifiedCodeForUser",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "{{username}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{gv_url}}/1/customerApp/getUnverifiedCodeForUser/?email={{username}}",
									"host": [
										"{{gv_url}}"
									],
									"path": [
										"1",
										"customerApp",
										"getUnverifiedCodeForUser",
										""
									],
									"query": [
										{
											"key": "email",
											"value": "{{username}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:38:26 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><users><user><expiryTime>2018-05-23T07:38:12.898Z</expiryTime><phoneNumber>+923336060606</phoneNumber><verificationCode>66TVKW</verificationCode></user><user><expiryTime>2018-05-18T06:27:04.348Z</expiryTime><phoneNumber>+923336060606</phoneNumber><verificationCode>5f1de9b2-1e62-413f-8e5c-d4c01b354b07</verificationCode></user><user><expiryTime>2018-05-18T00:22:21.94Z</expiryTime><phoneNumber>+923336060606</phoneNumber><verificationCode>65820671-d815-4c9b-8aa9-b4c5d29bb09f</verificationCode></user><user><expiryTime>2018-05-18T00:19:18.19Z</expiryTime><phoneNumber>+923336060606</phoneNumber><verificationCode>566846f6-fe21-4667-9f7e-3421bad0d7e7</verificationCode></user><user><expiryTime>2018-05-18T00:13:11.392Z</expiryTime><phoneNumber>+923336060606</phoneNumber><verificationCode>363a3c11-df23-4e6d-a534-86d1ce2c655e</verificationCode></user><user><expiryTime>2018-05-18T00:10:23.179Z</expiryTime><phoneNumber>+923336060606</phoneNumber><verificationCode>c8507a64-8b89-428f-a259-d515fbffeb33</verificationCode></user><user><expiryTime>2018-05-17T06:44:52.695Z</expiryTime><phoneNumber>+923335050505</phoneNumber><verificationCode>VJI571</verificationCode></user><user><expiryTime>2018-05-09T10:54:04.491Z</expiryTime><phoneNumber>+923335050505</phoneNumber><verificationCode>f053a1c0-84ae-4720-8115-2ee69e65da73</verificationCode></user></users>"
						}
					]
				},
				{
					"name": "Admin Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ada51faa-b911-4d1c-a160-8ee428d9e0d4",
								"type": "text/javascript",
								"exec": [
									"var data = pm.globals.get(\"admin_context\");",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Context is \" + data] = jsonData.vjResponse.context === data;",
									"tests[\"Username is \" + data] = jsonData.vjResponse.username === data;",
									"",
									"",
									"pm.environment.set(\"admin_token\", jsonData.vjResponse.token);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{url}}/extranetServices/1.1/user/{{admin_context}}/{{admin_context}}/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:38:26 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><vjResponse><context>customerappadmin</context><token>498831d7f39d4e4aa7d45e35c2b8d483</token><username>customerappadmin</username></vjResponse>"
						}
					]
				},
				{
					"name": "Auth Admin Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "11899685-2da2-4cd6-a6d7-d288e839946a",
								"type": "text/javascript",
								"exec": [
									"// Encryptor.java code to JavaScript",
									"var email = pm.globals.get(\"admin_context\");",
									"var password = pm.globals.get(\"admin_password\");",
									"var token = pm.environment.get(\"admin_token\");",
									"",
									"encrypt (email + \"\\\\+\" + password, token);",
									"",
									"function  encrypt (user_pass, token){",
									"    // var salt = hexStringToByte (\"f42832ab4ba1cc43\");",
									"    // var iterationCount = 20;",
									"    ",
									"    var password = CryptoJS.enc.Utf8.parse(token);",
									"    ",
									"    var salt = CryptoJS.enc.Hex.parse(\"f42832ab4ba1cc43\");",
									"    var iterations = 20;",
									"    ",
									"    // PBE according to PKCS#5 v1.5 (in other words: PBKDF1)",
									"    var md5 = CryptoJS.algo.MD5.create();",
									"    md5.update(password);",
									"    md5.update(salt);",
									"    var result = md5.finalize();",
									"    md5.reset();",
									"    for(var i = 1; i < iterations; i++) {",
									"        md5.update(result);",
									"        result = md5.finalize();",
									"        md5.reset();",
									"    }",
									"    ",
									"    // splitting key and IV",
									"    var key = CryptoJS.lib.WordArray.create(result.words.slice(0, 2));",
									"    var iv = CryptoJS.lib.WordArray.create(result.words.slice(2, 4));",
									"    ",
									"    var encrypted = CryptoJS.DES.encrypt(user_pass, key, {",
									"        iv: iv",
									"    });",
									"    ",
									"    pm.globals.set('admin_credentials', token + encrypted.ciphertext.toString(CryptoJS.enc.Base64));",
									"",
									"    // enchex.innerHTML = encrypted.ciphertext.toString();",
									"    // encbase64.innerHTML = encrypted.ciphertext.toString(CryptoJS.enc.Base64);",
									"} ",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "13b368bb-bf97-474f-a553-f59b839fb85a",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeader.isError === data1[2];",
									"",
									"var data2 = [true, false];",
									"",
									"tests[\"Success is \" + data2[0]] = jsonData.responseBody.success === data2[0];",
									"tests[\"Password should be changed: \" + data2[1]] = jsonData.responseBody.mustChangePassword === data2[1];",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"credentials\": \"{{admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}"
						},
						"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"credentials\": \"{{admin_credentials}}\",\r\n  \"attributes\": {\r\n    \"phoneNumber\": \"+923331234567\",\r\n    \"deviceInfo\": \"ios\",\r\n    \"deviceUUID\": \"{{devicePushId}}\",\r\n    \"appBuildNr\": \"270\",\r\n    \"os\": \"9.3.2\",\r\n    \"devicePushId\": \"{{devicePushId}}\"\r\n  }\r\n}"
								},
								"url": "{{url}}/extranetServices/1.6/user/{{admin_context}}/{{admin_context}}/authenticate"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "127",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:38:32 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=99",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeader\":{\"statusCode\":\"0\",\"message\":\"OK\",\"isError\":false},\"responseBody\":{\"success\":true,\"mustChangePassword\":false}}"
						}
					]
				},
				{
					"name": "VERIFY User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75edb78c-b0ce-48cd-a10d-1c0946c900d6",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"pm.environment.set(\"cust_token\", jsonData.responseBodyDto.token);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"externalAppUserId\": {{externalAppUserId}},\r\n    \"phoneNumber\": \"{{phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{admin_token}}/user/register?mode=VERIFY",
							"host": [
								"{{url}}"
							],
							"path": [
								"extranetServices",
								"1.5",
								"{{customer_context}}",
								"{{admin_context}}",
								"{{admin_token}}",
								"user",
								"register"
							],
							"query": [
								{
									"key": "mode",
									"value": "VERIFY"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalAppUserId\": {{externalAppUserId}},\r\n    \"phoneNumber\": \"{{phone}}\",\r\n    \"deviceId\": \"{{devicePushId}}\",\r\n    \"verificationCode\": \"{{verificationCode}}\",\r\n    \"source\": \"CUSTOMERAPP\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/extranetServices/1.5/{{customer_context}}/{{admin_context}}/{{admin_token}}/user/register?mode=VERIFY",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.5",
										"{{customer_context}}",
										"{{admin_context}}",
										"{{admin_token}}",
										"user",
										"register"
									],
									"query": [
										{
											"key": "mode",
											"value": "VERIFY"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:38:51 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"responseBodyDto\":{\"phoneNumber\":\"+923336060606\",\"token\":\"c9f4c03abfc44ec8bf1418009daa8ce8\",\"authenticatedUser\":{\"id\":54719,\"personId\":182844,\"firstName\":\"Maaz\",\"lastName\":\"Direct\",\"gender\":\"\",\"genderId\":-1,\"salutation\":\"Mr direct\",\"enabled\":true,\"passport\":[{\"id\":197088,\"passportNumber\":\"ABC123456\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-12T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197089,\"passportNumber\":\"ABC123456pyGUrZw\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-12T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME PYGURZW\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197090,\"passportNumber\":\"ABC123456DKFviGy\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-12T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME DKFVIGY\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197091,\"passportNumber\":\"ABC123456DRTDfSu\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-12T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME DRTDFSU\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197138,\"passportNumber\":\"ABC123456TSkficv\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-13T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME TSKFICV\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197139,\"passportNumber\":\"ABC123456DQvWVrq\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-13T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME DQVWVRQ\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197140,\"passportNumber\":\"ABC123456JBIyJZY\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-13T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME JBIYJZY\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197141,\"passportNumber\":\"ABC123456dsetILQ\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-13T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME DSETILQ\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197142,\"passportNumber\":\"ABC123456EuWuuXz\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-13T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME EUWUUXZ\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197143,\"passportNumber\":\"ABC123456iRbCkmI\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-13T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME IRBCKMI\",\"isDefault\":false,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false},{\"id\":197288,\"passportNumber\":\"ABC123456GVOqtNP\",\"issuedByCountry\":\"PAKISTAN\",\"passportCountry\":\"PAKISTAN\",\"isoIssuedByCountry\":\"PAK\",\"isoPassportCountry\":\"PAK\",\"issuedOnDate\":\"\",\"expiresOnDate\":\"2018-05-18T00:00:00Z\",\"visas\":[],\"isOnHands\":true,\"displayName\":\"PASSPORT DISPLAY NAME GVOQTNP\",\"isDefault\":true,\"passportFileDtos\":[],\"isInvalid\":1,\"isActive\":false}],\"dateOfBirth\":\"\",\"personPhoneNumbers\":[{\"id\":3147844,\"phoneNumber\":\"+923335050505\"},{\"id\":3147887,\"phoneNumber\":\"+923336060606\"}],\"customerId\":1569,\"username\":\"maaz@d.com\",\"token\":\"c9f4c03abfc44ec8bf1418009daa8ce8\",\"isChangedPassword\":false,\"userPreferences\":[{\"key\":\"subscription\",\"value\":\"true\"}],\"baseCompanyNumber\":\"+35620928041\",\"baseCompanyEmail\":\"customerservice@vistajet.com \",\"accounts\":[{\"id\":2134,\"typeId\":1,\"identifier\":\"51399634301457\",\"name\":\"ACCOUNT TOP FSP 5 2134\",\"membershipStatus\":-1,\"membershipTypeId\":-1,\"aircraftTypeDtos\":[{\"id\":16,\"code\":\"GL5T\",\"name\":\"Global 5000\",\"displayName\":\"Global 5000\"}],\"isPreferred\":false},{\"id\":44676,\"typeId\":1,\"identifier\":\"51508530573236\",\"name\":\"ACCOUNT TOP FSP 5 44676\",\"membershipStatus\":-1,\"membershipTypeId\":-1,\"aircraftTypeDtos\":[{\"id\":16,\"code\":\"GL5T\",\"name\":\"Global 5000\",\"displayName\":\"Global 5000\"}],\"isPreferred\":false},{\"id\":46473,\"typeId\":9,\"identifier\":\"51511278562199\",\"name\":\"ACCOUNT #46473\",\"membershipStatus\":2,\"membershipTypeId\":1,\"aircraftTypeDtos\":[],\"isPreferred\":true}]}}}"
						}
					]
				},
				{
					"name": "Account Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c9bab5a-fa51-40c1-bbc8-5448ac4ea6f1",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"// Get FSP Account ID",
									"var fsp = jsonData.accountStatusDto.user.accounts.filter((jsonData) => jsonData.typeId == 1 && jsonData.membershipStatus == -1);",
									"// console.log(fsp);",
									"fsp.forEach(function (key){",
									"    pm.environment.set(\"fsp_accountId\", key.id);",
									"});",
									"// console.log(pm.environment.get(\"fsp_accountId\"));",
									"",
									"// Get VJ-Direct Account ID",
									"var vjdirect = jsonData.accountStatusDto.user.accounts.filter((jsonData) => jsonData.typeId == 9);",
									"// console.log(vjdirect);",
									"vjdirect.forEach(function (key){",
									"    pm.environment.set(\"vjdirect_accountId\", key.id);",
									"});",
									"// console.log(pm.environment.get(\"vjdirect_accountId\"));",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/accountStatus"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/accountStatus"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "1333",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:39:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"accountStatusDto\":{\"user\":{\"id\":54719,\"personId\":182844,\"firstName\":\"Maaz\",\"lastName\":\"Direct\",\"gender\":\"\",\"genderId\":-1,\"salutation\":\"Mr direct\",\"enabled\":true,\"passport\":[],\"dateOfBirth\":\"\",\"personPhoneNumbers\":[{\"id\":3147844,\"phoneNumber\":\"+923335050505\"},{\"id\":3147887,\"phoneNumber\":\"+923336060606\"}],\"customerId\":1569,\"verificationStatusCode\":1,\"verificationStatusDescription\":\"The user is verified\",\"username\":\"maaz@d.com\",\"isChangedPassword\":false,\"userPreferences\":[{\"key\":\"subscription\",\"value\":\"true\"}],\"baseCompanyNumber\":\"+35620928041\",\"baseCompanyEmail\":\"customerservice@vistajet.com \",\"accounts\":[{\"id\":2134,\"typeId\":1,\"identifier\":\"51399634301457\",\"name\":\"ACCOUNT TOP FSP 5 2134\",\"membershipStatus\":-1,\"membershipTypeId\":-1,\"aircraftTypeDtos\":[{\"id\":16,\"code\":\"GL5T\",\"name\":\"Global 5000\",\"displayName\":\"Global 5000\"}],\"isPreferred\":false},{\"id\":44676,\"typeId\":1,\"identifier\":\"51508530573236\",\"name\":\"ACCOUNT TOP FSP 5 44676\",\"membershipStatus\":-1,\"membershipTypeId\":-1,\"aircraftTypeDtos\":[{\"id\":16,\"code\":\"GL5T\",\"name\":\"Global 5000\",\"displayName\":\"Global 5000\"}],\"isPreferred\":false},{\"id\":46473,\"typeId\":9,\"identifier\":\"51511278562199\",\"name\":\"ACCOUNT #46473\",\"membershipStatus\":2,\"membershipTypeId\":1,\"aircraftTypeDtos\":[],\"isPreferred\":true}]}}}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "69daa518-48f1-40f2-84ed-98a2558db752",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "15686393-66f3-4292-afca-75d09b06a940",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Request a Flight - done",
			"item": [
				{
					"name": "Request a Flight - Single Leg",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "05e4c597-2c17-486e-a780-be354dbc0f8c",
								"type": "text/javascript",
								"exec": [
									"// Quote ID randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('singleLeg_quoteId', uuid.v4());",
									"",
									"// Flight External Identifier randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('singleLeg_flightLegExtIdentifier', uuid.v4());",
									"",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"departureTime\", moment().add(1, 'd').format(\"YYYY-MM-DDTHH:mm:ss\"));",
									"pm.environment.set(\"arrivalTime\", moment().add(1, 'd').add(5, 'h').format(\"YYYY-MM-DDTHH:mm:ss\"));",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "32aa9cf6-fe78-456e-a7ed-02012c54d3e8",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", \"false\"];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.ResponseBody.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.ResponseBody.responseHeader.isError === data1[2];",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<flightRequestForCustomer>\r\n    <quoteId>{{singleLeg_quoteId}}</quoteId>\r\n    <account>{{fsp_accountId}}</account>\r\n\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExtIdentifier>{{singleLeg_flightLegExtIdentifier}}</flightLegExtIdentifier>\r\n            <departureAirportId>2502</departureAirportId>\r\n            <arrivalAirportId>2503</arrivalAirportId>\r\n            <numberOfPassenger>4</numberOfPassenger>\r\n            <aircraftType>CL350</aircraftType>\r\n            <requestedAircraftTypeId>10</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>Challenger 350</requestedAircraftTypeName>\r\n            <departureTime>{{departureTime}}Z</departureTime>    \r\n            <version>0</version>\r\n            <arrivalTime>{{arrivalTime}}Z</arrivalTime>        \r\n        </flightLeg>\r\n    </flightLegs>\r\n</flightRequestForCustomer>"
						},
						"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<flightRequestForCustomer>\r\n    <quoteId>{{singleLeg_quoteId}}</quoteId>\r\n    <account>{{fsp_accountId}}</account>\r\n\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExtIdentifier>{{singleLeg_flightLegExtIdentifier}}</flightLegExtIdentifier>\r\n            <departureAirportId>2502</departureAirportId>\r\n            <arrivalAirportId>2503</arrivalAirportId>\r\n            <numberOfPassenger>4</numberOfPassenger>\r\n            <aircraftType>CL350</aircraftType>\r\n            <requestedAircraftTypeId>10</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>Challenger 350</requestedAircraftTypeName>\r\n            <departureTime>{{departureTime}}Z</departureTime>    \r\n            <version>0</version>\r\n            <arrivalTime>{{arrivalTime}}Z</arrivalTime>        \r\n        </flightLeg>\r\n    </flightLegs>\r\n</flightRequestForCustomer>"
								},
								"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:41:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ResponseBody><responseHeader><isError>false</isError><message>OK</message><statusCode>0</statusCode></responseHeader></ResponseBody>"
						}
					]
				},
				{
					"name": "Request a Flight - Multi Leg",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "43327da8-1da4-4bde-8b7c-c0d309e1e4d2",
								"type": "text/javascript",
								"exec": [
									"// Quote ID randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('multiLeg_quoteId', uuid.v4());",
									"",
									"// Flight External Identifier randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('first_multiLeg_flightLegExtIdentifier', uuid.v4());",
									"pm.environment.set('second_multiLeg_flightLegExtIdentifier', uuid.v4());",
									"",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"firstLeg_departureTime\", moment().add(1, 'd').format(\"YYYY-MM-DDTHH:mm:ss\"));",
									"pm.environment.set(\"firstLeg_arrivalTime\", moment().add(1, 'd').add(5, 'h').format(\"YYYY-MM-DDTHH:mm:ss\"));",
									"pm.environment.set(\"secondLeg_departureTime\", moment().add(2, 'd').format(\"YYYY-MM-DDTHH:mm:ss\"));",
									"pm.environment.set(\"secondLeg_arrivalTime\", moment().add(2, 'd').add(5, 'h').format(\"YYYY-MM-DDTHH:mm:ss\"));",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d0c9999d-651c-41b4-aba1-107d59c8f066",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", \"false\"];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.ResponseBody.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.ResponseBody.responseHeader.isError === data1[2];",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<flightRequestForCustomer>\r\n    <quoteId>{{multiLeg_quoteId}}</quoteId>\r\n    <account>{{fsp_accountId}}</account>\r\n\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExtIdentifier>{{first_multiLeg_flightLegExtIdentifier}}</flightLegExtIdentifier>\r\n            <departureAirportId>2502</departureAirportId>\r\n            <arrivalAirportId>2503</arrivalAirportId>\r\n            <numberOfPassenger>4</numberOfPassenger>\r\n            <aircraftType>CL350</aircraftType>\r\n            <requestedAircraftTypeId>10</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>Challenger 350</requestedAircraftTypeName>\r\n            <departureTime>{{firstLeg_departureTime}}Z</departureTime>    \r\n            <version>0</version>\r\n            <arrivalTime>{{firstLeg_arrivalTime}}Z</arrivalTime>        \r\n        </flightLeg>\r\n        <flightLeg>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExtIdentifier>{{second_multiLeg_flightLegExtIdentifier}}</flightLegExtIdentifier>\r\n            <departureAirportId>2502</departureAirportId>\r\n            <arrivalAirportId>2503</arrivalAirportId>\r\n            <numberOfPassenger>4</numberOfPassenger>\r\n            <aircraftType>CL350</aircraftType>\r\n            <requestedAircraftTypeId>10</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>Challenger 350</requestedAircraftTypeName>\r\n            <departureTime>{{secondLeg_departureTime}}Z</departureTime>    \r\n            <version>0</version>\r\n            <arrivalTime>{{secondLeg_arrivalTime}}Z</arrivalTime>        \r\n        </flightLeg>\r\n    </flightLegs>\r\n</flightRequestForCustomer>"
						},
						"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<flightRequestForCustomer>\r\n    <quoteId>{{multiLeg_quoteId}}</quoteId>\r\n    <account>{{fsp_accountId}}</account>\r\n\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExtIdentifier>{{first_multiLeg_flightLegExtIdentifier}}</flightLegExtIdentifier>\r\n            <departureAirportId>2502</departureAirportId>\r\n            <arrivalAirportId>2503</arrivalAirportId>\r\n            <numberOfPassenger>4</numberOfPassenger>\r\n            <aircraftType>CL350</aircraftType>\r\n            <requestedAircraftTypeId>10</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>Challenger 350</requestedAircraftTypeName>\r\n            <departureTime>{{firstLeg_departureTime}}Z</departureTime>    \r\n            <version>0</version>\r\n            <arrivalTime>{{firstLeg_arrivalTime}}Z</arrivalTime>        \r\n        </flightLeg>\r\n        <flightLeg>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExtIdentifier>{{second_multiLeg_flightLegExtIdentifier}}</flightLegExtIdentifier>\r\n            <departureAirportId>2502</departureAirportId>\r\n            <arrivalAirportId>2503</arrivalAirportId>\r\n            <numberOfPassenger>4</numberOfPassenger>\r\n            <aircraftType>CL350</aircraftType>\r\n            <requestedAircraftTypeId>10</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>Challenger 350</requestedAircraftTypeName>\r\n            <departureTime>{{secondLeg_departureTime}}Z</departureTime>    \r\n            <version>0</version>\r\n            <arrivalTime>{{secondLeg_arrivalTime}}Z</arrivalTime>        \r\n        </flightLeg>\r\n    </flightLegs>\r\n</flightRequestForCustomer>"
								},
								"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:41:39 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ResponseBody><responseHeader><isError>false</isError><message>OK</message><statusCode>0</statusCode></responseHeader></ResponseBody>"
						}
					]
				},
				{
					"name": "Upcoming RaF Itineraries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc193d5e-498f-49b0-994d-09b96739f3f6",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"pm.test(\"Single Leg created present in Upcoming Itineraries\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"singleLeg_quoteId\"));",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"singleLeg_flightLegExtIdentifier\"));",
									"});",
									"pm.test(\"Multi-Leg created present in Upcoming Itineraries\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"multiLeg_quoteId\"));",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"first_multiLeg_flightLegExtIdentifier\"));",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"second_multiLeg_flightLegExtIdentifier\"));",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/extranetServices/1.8/{{customer_context}}/{{customer_context}}/{{cust_token}}/fetchItineraries?isUpcoming=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"extranetServices",
								"1.8",
								"{{customer_context}}",
								"{{customer_context}}",
								"{{cust_token}}",
								"fetchItineraries"
							],
							"query": [
								{
									"key": "isUpcoming",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/extranetServices/1.8/{{customer_context}}/{{customer_context}}/{{cust_token}}/fetchItineraries?isUpcoming=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.8",
										"{{customer_context}}",
										"{{customer_context}}",
										"{{cust_token}}",
										"fetchItineraries"
									],
									"query": [
										{
											"key": "isUpcoming",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:41:44 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=99",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"itineraryDtos\":[{\"orderExtIdentifier\":\"91d4e8bb-3b77-46b2-a862-65984bb50993\",\"orderStatus\":\"Unconfirmed\",\"accountId\":44676,\"legs\":[{\"flightLegExtIdentifier\":\"3032ec30-0f30-4e90-b426-24f82b539acb\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-21T12:45:13Z\",\"departureAirportTimeUTC\":\"2018-05-21T07:45:13Z\",\"arrivalAirportTimeLocal\":\"2018-05-21T17:45:13Z\",\"arrivalAirportTimeUTC\":\"2018-05-21T12:45:13Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"31e7ef2e-ba1d-4d83-8c20-c473ec08bf43\",\"orderStatus\":\"Unconfirmed\",\"accountId\":44676,\"legs\":[{\"flightLegExtIdentifier\":\"41aa85db-f357-4fcf-805f-251efe748533\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-21T12:45:33Z\",\"departureAirportTimeUTC\":\"2018-05-21T07:45:33Z\",\"arrivalAirportTimeLocal\":\"2018-05-21T17:45:33Z\",\"arrivalAirportTimeUTC\":\"2018-05-21T12:45:33Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1},{\"flightLegExtIdentifier\":\"b3ba84a7-7db6-4ada-a9e3-219900d5b8a8\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-22T12:45:33Z\",\"departureAirportTimeUTC\":\"2018-05-22T07:45:33Z\",\"arrivalAirportTimeLocal\":\"2018-05-22T17:45:33Z\",\"arrivalAirportTimeUTC\":\"2018-05-22T12:45:33Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderLegId\":380716,\"orderStatus\":\"Confirmed\",\"orderType\":\"Program\",\"accountId\":44676,\"legs\":[{\"legId\":1134597,\"arrivalAirportId\":1923,\"departureAirportId\":1439,\"departureAirportTimeLocal\":\"2018-05-29T20:00:00Z\",\"departureAirportTimeUTC\":\"2018-05-30T00:00:00Z\",\"arrivalAirportTimeLocal\":\"2018-05-30T09:25:00Z\",\"arrivalAirportTimeUTC\":\"2018-05-30T07:25:00Z\",\"defaultDurationMinutes\":445,\"aircraftTypeName\":\"Global XRS/6000\",\"aircraftTypeId\":7,\"requestedAircraftTypeName\":\"N/A\",\"aircraftTailNumber\":\"9H-VJP\",\"aircraftId\":1496,\"numberOfPassenger\":7,\"legStatus\":\"Confirmed\",\"version\":0,\"operatorTailId\":10134,\"operatorTailName\":\"VistaJet Limited\",\"operatingCompanyName\":\"VistaJet Limited\"}]},{\"orderExtIdentifier\":\"0F41311A-15EB-CA8F-8173-6FBAF1BA0465\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"F8616C84-0B8A-CC99-187F-BF0EEC15D3DF\",\"arrivalAirportId\":323,\"departureAirportId\":1486,\"departureAirportTimeLocal\":\"2018-09-20T05:25:00Z\",\"departureAirportTimeUTC\":\"2018-09-20T03:25:00Z\",\"arrivalAirportTimeLocal\":\"2018-09-20T07:30:00Z\",\"arrivalAirportTimeUTC\":\"2018-09-20T05:30:00Z\",\"defaultDurationMinutes\":125,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"008A384C-7905-3310-4C17-3AD2BE143B3E\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"71CAAAF2-D3CC-C444-BD99-9098157693B6\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"19E0DBCE-E01D-FED1-B37E-6A6CF2A01CA5\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"F4423CBB-8956-0B80-0300-482A872F09B4\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"80D92397-95F4-648B-9714-A494638AEF63\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"452F40BB-E834-1EA7-51FF-E142FE00F109\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"6EEEEFFF-2946-7122-E261-88EBD20918A9\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"7FAF7D5F-FD49-5EE3-D615-6957ECCC7644\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"96D6D9CC-97E5-CC03-47A0-F800854094D5\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"3F3C0401-8748-4EBA-1EFF-C7AEF22E78E0\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"1A54E14F-FED0-AEEE-B6B4-CFCAD71F0F1C\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"3624650E-7057-BEC2-4453-1829B894BF2B\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"8A4A446A-48C8-EC66-6E5E-DE6B32B1F5D8\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"2249AA47-D6CA-508F-8DB6-B8C55277101E\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"1CAB943F-8432-94BE-8393-32037FDB2B41\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"21FA5013-0807-9E66-2F22-3E75531742F6\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"256F76E4-2C8D-C59C-F4CC-203E5ACF97B7\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"08B533B5-313A-5AAC-6DC3-B611C17AF314\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"FBB39FD7-CE47-756C-A48F-8FDE5EB28990\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"2E943143-5F30-E7BC-0661-DA40D242222C\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"22E5E163-B8CF-6461-8BC7-EE64FA87F37D\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"B5670F7B-AFD6-9EF5-D731-3CCC2D8BAC6D\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"CF94CD06-B9A3-70BF-1CF2-BDA786F65420\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"A2702CB1-BDAC-17D7-6B64-60771784A35F\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]}]}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f4a78d0d-03af-4654-975b-45aa02d5dcf5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "96e4c75c-5be5-4220-9283-bab92eb1b5ba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Credit Card - done",
			"item": [
				{
					"name": "Add Credit Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "158eda6f-51db-4d22-9796-ab74539f69b4",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"pm.environment.set(\"cc_alias\", jsonData.creditCardListItem.alias);",
									"",
									"var list = jsonData.creditCardListItem;",
									"// console.log(list);",
									"tests[\"Credit Card added successfully \"] = list !== null || list !== undefined || list !== 0;",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"creditCardNumber\": \"4242424242424242\",\r\n    \"expiryDate\": \"11/21\",\r\n    \"cvv\": {{cvv}},\r\n    \"type\": \"Business\",\r\n    \"isDefault\": 0\r\n}"
						},
						"url": "{{url}}/extranetServices/1.6/{{customer_context}}/{{customer_context}}/{{cust_token}}/creditCardManagement"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"creditCardNumber\": \"4242424242424242\",\r\n    \"expiryDate\": \"11/21\",\r\n    \"cvv\": {{cvv}},\r\n    \"type\": \"Business\",\r\n    \"isDefault\": 0\r\n}"
								},
								"url": "{{url}}/extranetServices/1.6/{{customer_context}}/{{customer_context}}/{{cust_token}}/creditCardManagement"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "250",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:42:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"creditCardListItem\":{\"alias\":\"F13C9666-65A4-44FD-A84E-7BFE9E57B067\",\"cardBrandId\":5,\"type\":\"Business\",\"cardNumberLastFour\":\"4242\",\"isDefault\":1,\"expiryDate\":\"11/21\",\"cardFee\":0.0}}"
						}
					]
				},
				{
					"name": "Fetch Credit Card List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c77ea06-bbf6-42c2-afec-5a3796dd98e9",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"",
									"pm.test(\"Credit Card added previously in list\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"cc_alias\"));",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": "{{url}}/extranetServices/1.6/{{customer_context}}/{{customer_context}}/{{cust_token}}/creditCardList"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{url}}/extranetServices/1.6/{{customer_context}}/{{customer_context}}/{{cust_token}}/creditCardList"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "272",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:42:31 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"creditCardsDto\":{\"creditCardListItems\":[{\"alias\":\"F13C9666-65A4-44FD-A84E-7BFE9E57B067\",\"cardBrandId\":5,\"type\":\"Business\",\"cardNumberLastFour\":\"4242\",\"isDefault\":1,\"expiryDate\":\"11/21\",\"cardFee\":0.0}]}}"
						}
					]
				},
				{
					"name": "Delete Credit Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6317f6d3-02df-4d7d-a889-08b60f98e71d",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", \"false\"];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.creditCardResponseDto.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.creditCardResponseDto.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.creditCardResponseDto.responseHeader.isError === data1[2];",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<creditCardRequestDto>\r\n    <alias>{{cc_alias}}</alias>\r\n    <expiryDate>11/21</expiryDate>\r\n    <cvv>{{cvv}}</cvv>\r\n    <type>Business</type>\r\n    <isDefault>1</isDefault>\r\n</creditCardRequestDto>\r\n"
						},
						"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{cust_token}}/deleteCreditCard"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<creditCardRequestDto>\r\n    <alias>{{cc_alias}}</alias>\r\n    <expiryDate>11/21</expiryDate>\r\n    <cvv>{{cvv}}</cvv>\r\n    <type>Business</type>\r\n    <isDefault>1</isDefault>\r\n</creditCardRequestDto>\r\n"
								},
								"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{cust_token}}/deleteCreditCard"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "154",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:42:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><creditCardResponseDto><responseHeader><isError>false</isError><message>OK</message><statusCode>0</statusCode></responseHeader></creditCardResponseDto>"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e7b25e29-2617-4862-92f9-b3a78d195bd2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ea6d7f4a-afc5-49f6-9e3a-87cabcbffa7f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Avail OW Offer - done",
			"item": [
				{
					"name": "Pricer Reload",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd7daea1-9460-4d5f-a959-753ec3e3dbf8",
								"type": "text/javascript",
								"exec": [
									"// Boolean to check if OW_count should be updated or not",
									"pm.environment.set(\"OW_offer_boolean\", false);",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": "{{pricer_url}}/{{pricer_context}}/v1/pricer/reload-data"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{pricer_url}}/{{pricer_context}}/v1/pricer/reload-data"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "2",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:43:39 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Fetch OW Offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fe4a350-4cc1-4525-a375-01cb748e75d3",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"Success\", \"false\"];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseDto.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseDto.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseDto.responseHeader.isError === data1[2];",
									"",
									"// Get all Offers",
									"var OW_offers = jsonData.responseDto.responseBody.oneWayOffers.oneWayOffer;",
									"// console.log(OW_offers);",
									"",
									"var list = jsonData.responseDto.responseBody.oneWayOffers;",
									"// console.log(list);",
									"if(!list){",
									"    // console.log(\"in if condition\");",
									"    postman.setNextRequest(\"Fetch EL Offers\");",
									"} else {",
									"    if(pm.environment.get(\"OW_offer_boolean\") === false){",
									"        // console.log(\"in if condition OW_offer_boolean: \" + pm.environment.get(\"OW_offer_boolean\"));",
									"        pm.environment.set(\"OW_count\", jsonData.responseDto.responseBody.totalCount-1);",
									"    }",
									"    switch(pm.environment.get(\"OW_count\")){",
									"        case 0:",
									"            // console.log(\"case 0 OW_offer_boolean: \" + pm.environment.get(\"OW_offer_boolean\"));",
									"            pm.environment.set(\"OW_offer_id\", OW_offers.id);",
									"            pm.environment.set(\"OW_aircraftTypeId\", OW_offers.aircraftTypeId);",
									"            pm.environment.set(\"OW_departureAirportId\", OW_offers.departureAirportId);",
									"            pm.environment.set(\"OW_departureTime\", OW_offers.validTo);",
									"            break;",
									"        default:",
									"            // console.log(\"case \" + pm.environment.get(\"OW_count\") + \" OW_offer_boolean: \" + pm.environment.get(\"OW_offer_boolean\"));",
									"            // console.log(\"Default OW_offer_boolean: \" + pm.environment.get(\"OW_offer_boolean\"));",
									"            pm.environment.set(\"OW_offer_id\", OW_offers[pm.environment.get(\"OW_count\")].id);",
									"            pm.environment.set(\"OW_aircraftTypeId\", OW_offers[pm.environment.get(\"OW_count\")].aircraftTypeId);",
									"            pm.environment.set(\"OW_departureAirportId\", OW_offers[pm.environment.get(\"OW_count\")].departureAirportId);",
									"            pm.environment.set(\"OW_departureTime\", OW_offers[pm.environment.get(\"OW_count\")].validTo);",
									"            break;",
									"    }",
									"}",
									"// console.log(\"Offer id: \" + pm.environment.get(\"OW_offer_id\"));",
									"// console.log(\"Aircraft id: \" + pm.environment.get(\"OW_aircraftTypeId\"));",
									"// console.log(\"Dept airport id: \" + pm.environment.get(\"OW_departureAirportId\"));",
									"// console.log(\"Dept time: \" + pm.environment.get(\"OW_departureTime\"));",
									"",
									"// Counter to pick airport id from array",
									"pm.globals.set(\"count_airportId\", 0);",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "494001ee-12f1-46c3-8fad-2e4ba2b16959",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<oneWayListRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currentCount>0</currentCount>\r\n    <!--<itemsPerPage>20</itemsPerPage>-->\r\n</oneWayListRequestDto>\r\n"
						},
						"url": "{{url}}/extranetServices/1.2/{{pricer_context}}/{{customer_context}}/{{cust_token}}/one-way-opportunities"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<oneWayListRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currentCount>0</currentCount>\r\n    <!--<itemsPerPage>20</itemsPerPage>-->\r\n</oneWayListRequestDto>\r\n"
								},
								"url": "{{url}}/extranetServices/1.2/{{pricer_context}}/{{customer_context}}/{{cust_token}}/one-way-opportunities"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:45:15 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><responseDto><responseHeader><isError>false</isError><message>Success</message><statusCode>0</statusCode></responseHeader><responseBody><oneWayOffers><oneWayOffer><id>6682</id><aircraftId>330</aircraftId><tailNumber>9H-VFE</tailNumber><aircraftTypeId>5</aircraftTypeId><departureAirportId>2349</departureAirportId><departureAirportPlaceId>2236</departureAirportPlaceId><segmentStart>2018-05-19T05:15:00.000Z</segmentStart><segmentEnd>2018-05-22T05:15:00.000Z</segmentEnd><validFrom>2018-05-17T15:15:00.000Z</validFrom><validTo>2018-05-25T02:45:00.000Z</validTo><availableIn>-106214452</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6561</id><aircraftId>4046</aircraftId><tailNumber>9H-VJU</tailNumber><aircraftTypeId>7</aircraftTypeId><departureAirportId>2256</departureAirportId><departureAirportPlaceId>2148</departureAirportPlaceId><segmentStart>2018-05-21T06:47:00.000Z</segmentStart><segmentEnd>2018-05-24T06:47:00.000Z</segmentEnd><validFrom>2018-05-09T22:30:00.000Z</validFrom><validTo>2018-06-05T04:45:00.000Z</validTo><availableIn>79305548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6706</id><aircraftId>5801</aircraftId><tailNumber>N355VJ</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>5322</departureAirportId><departureAirportPlaceId>1269</departureAirportPlaceId><segmentStart>2018-05-21T01:32:00.000Z</segmentStart><segmentEnd>2018-05-23T04:15:00.000Z</segmentEnd><validFrom>2018-05-18T02:30:00.000Z</validFrom><validTo>2018-05-22T10:15:00.000Z</validTo><availableIn>82005548</availableIn><operatingCompanyId>1451</operatingCompanyId><operatingCompanyName>Strawberry Corporation</operatingCompanyName></oneWayOffer><oneWayOffer><id>6483</id><aircraftId>1598</aircraftId><tailNumber>9H-ILV</tailNumber><aircraftTypeId>6</aircraftTypeId><departureAirportId>675</departureAirportId><departureAirportPlaceId>661</departureAirportPlaceId><segmentStart>2018-05-21T01:00:00.000Z</segmentStart><segmentEnd>2018-05-24T01:00:00.000Z</segmentEnd><validFrom>2018-05-03T22:30:00.000Z</validFrom><validTo>2018-05-27T01:45:00.000Z</validTo><availableIn>58485548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6663</id><aircraftId>357</aircraftId><tailNumber>9H-VCG</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1902</departureAirportId><departureAirportPlaceId>1817</departureAirportPlaceId><segmentStart>2018-05-21T05:15:00.000Z</segmentStart><segmentEnd>2018-05-24T05:15:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-05-28T08:45:00.000Z</validTo><availableIn>70185548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6675</id><aircraftId>309</aircraftId><tailNumber>9H-VCB</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>699</departureAirportId><departureAirportPlaceId>661</departureAirportPlaceId><segmentStart>2018-05-21T05:45:00.000Z</segmentStart><segmentEnd>2018-05-22T23:45:00.000Z</segmentEnd><validFrom>2018-05-17T09:45:00.000Z</validFrom><validTo>2018-05-22T05:45:00.000Z</validTo><availableIn>75585548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6327</id><aircraftId>2347</aircraftId><tailNumber>9H-VCK</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1773</departureAirportId><departureAirportPlaceId>1698</departureAirportPlaceId><segmentStart>2018-05-22T08:45:00.000Z</segmentStart><segmentEnd>2018-05-25T08:45:00.000Z</segmentEnd><validFrom>2018-05-01T13:15:00.000Z</validFrom><validTo>2018-05-27T05:45:00.000Z</validTo><availableIn>169185548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6668</id><aircraftId>342</aircraftId><tailNumber>9H-VCF</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>2731</departureAirportId><departureAirportPlaceId>2589</departureAirportPlaceId><segmentStart>2018-05-23T08:00:00.000Z</segmentStart><segmentEnd>2018-05-25T04:45:00.000Z</segmentEnd><validFrom>2018-05-17T11:45:00.000Z</validFrom><validTo>2018-05-24T10:45:00.000Z</validTo><availableIn>249285548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6673</id><aircraftId>355</aircraftId><tailNumber>9H-VCC</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1217</departureAirportId><departureAirportPlaceId>1177</departureAirportPlaceId><segmentStart>2018-05-24T02:30:00.000Z</segmentStart><segmentEnd>2018-05-25T19:45:00.000Z</segmentEnd><validFrom>2018-05-17T09:45:00.000Z</validFrom><validTo>2018-05-25T01:45:00.000Z</validTo><availableIn>323085548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6676</id><aircraftId>309</aircraftId><tailNumber>9H-VCB</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1833</departureAirportId><departureAirportPlaceId>1753</departureAirportPlaceId><segmentStart>2018-05-25T08:15:00.000Z</segmentStart><segmentEnd>2018-05-28T08:15:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-05-29T03:15:00.000Z</validTo><availableIn>426585548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6666</id><aircraftId>342</aircraftId><tailNumber>9H-VCF</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1773</departureAirportId><departureAirportPlaceId>1698</departureAirportPlaceId><segmentStart>2018-05-26T06:00:00.000Z</segmentStart><segmentEnd>2018-05-28T00:15:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-05-27T06:15:00.000Z</validTo><availableIn>504885548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6701</id><aircraftId>307</aircraftId><tailNumber>9H-VCA</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>2011</departureAirportId><departureAirportPlaceId>1914</departureAirportPlaceId><segmentStart>2018-05-27T02:00:00.000Z</segmentStart><segmentEnd>2018-05-29T22:15:00.000Z</segmentEnd><validFrom>2018-05-18T08:15:00.000Z</validFrom><validTo>2018-05-29T04:15:00.000Z</validTo><availableIn>576885548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6670</id><aircraftId>356</aircraftId><tailNumber>9H-VCD</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1499</departureAirportId><departureAirportPlaceId>1431</departureAirportPlaceId><segmentStart>2018-05-27T15:15:00.000Z</segmentStart><segmentEnd>2018-05-30T15:15:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-06-07T04:45:00.000Z</validTo><availableIn>624585548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6501</id><aircraftId>360</aircraftId><tailNumber>9H-VJM</tailNumber><aircraftTypeId>7</aircraftTypeId><departureAirportId>930</departureAirportId><departureAirportPlaceId>908</departureAirportPlaceId><segmentStart>2018-05-28T04:45:00.000Z</segmentStart><segmentEnd>2018-05-31T04:45:00.000Z</segmentEnd><validFrom>2018-05-07T14:45:00.000Z</validFrom><validTo>2018-06-03T03:45:00.000Z</validTo><availableIn>673185548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6462</id><aircraftId>2347</aircraftId><tailNumber>9H-VCK</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1482</departureAirportId><departureAirportPlaceId>1426</departureAirportPlaceId><segmentStart>2018-05-29T01:30:00.000Z</segmentStart><segmentEnd>2018-05-30T20:45:00.000Z</segmentEnd><validFrom>2018-05-03T10:45:00.000Z</validFrom><validTo>2018-05-30T02:45:00.000Z</validTo><availableIn>747885548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6702</id><aircraftId>5797</aircraftId><tailNumber>9H-VCN</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>782</departureAirportId><departureAirportPlaceId>661</departureAirportPlaceId><segmentStart>2018-05-29T00:30:00.000Z</segmentStart><segmentEnd>2018-06-01T00:30:00.000Z</segmentEnd><validFrom>2018-05-18T07:15:00.000Z</validFrom><validTo>2018-06-10T14:15:00.000Z</validTo><availableIn>747885548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6664</id><aircraftId>357</aircraftId><tailNumber>9H-VCG</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>2393</departureAirportId><departureAirportPlaceId>2271</departureAirportPlaceId><segmentStart>2018-05-30T05:45:00.000Z</segmentStart><segmentEnd>2018-06-02T05:45:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-06-02T08:45:00.000Z</validTo><availableIn>849585548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6667</id><aircraftId>342</aircraftId><tailNumber>9H-VCF</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>2312</departureAirportId><departureAirportPlaceId>2203</departureAirportPlaceId><segmentStart>2018-05-31T00:45:00.000Z</segmentStart><segmentEnd>2018-06-03T00:45:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-06-02T11:45:00.000Z</validTo><availableIn>917985548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6677</id><aircraftId>307</aircraftId><tailNumber>9H-VCA</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>261</departureAirportId><departureAirportPlaceId>243</departureAirportPlaceId><segmentStart>2018-05-31T01:15:00.000Z</segmentStart><segmentEnd>2018-06-01T19:45:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-06-01T01:45:00.000Z</validTo><availableIn>919785548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6703</id><aircraftId>2996</aircraftId><tailNumber>9H-VCL</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1493</departureAirportId><departureAirportPlaceId>1435</departureAirportPlaceId><segmentStart>2018-05-31T02:30:00.000Z</segmentStart><segmentEnd>2018-06-03T02:30:00.000Z</segmentEnd><validFrom>2018-05-18T08:15:00.000Z</validFrom><validTo>2018-06-02T09:15:00.000Z</validTo><availableIn>924285548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6661</id><aircraftId>387</aircraftId><tailNumber>9H-VCJ</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>2072</departureAirportId><departureAirportPlaceId>1966</departureAirportPlaceId><segmentStart>2018-05-31T02:30:00.000Z</segmentStart><segmentEnd>2018-06-03T02:30:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-06-05T08:45:00.000Z</validTo><availableIn>924285548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6581</id><aircraftId>2347</aircraftId><tailNumber>9H-VCK</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>782</departureAirportId><departureAirportPlaceId>661</departureAirportPlaceId><segmentStart>2018-05-31T21:45:00.000Z</segmentStart><segmentEnd>2018-06-03T21:45:00.000Z</segmentEnd><validFrom>2018-05-10T20:00:00.000Z</validFrom><validTo>2018-06-06T11:45:00.000Z</validTo><availableIn>997185548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6674</id><aircraftId>355</aircraftId><tailNumber>9H-VCC</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1499</departureAirportId><departureAirportPlaceId>1431</departureAirportPlaceId><segmentStart>2018-06-04T04:00:00.000Z</segmentStart><segmentEnd>2018-06-07T04:00:00.000Z</segmentEnd><validFrom>2018-05-17T10:45:00.000Z</validFrom><validTo>2018-06-12T03:00:00.000Z</validTo><availableIn>1275285548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6704</id><aircraftId>307</aircraftId><tailNumber>9H-VCA</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>1232</departureAirportId><departureAirportPlaceId>1192</departureAirportPlaceId><segmentStart>2018-06-04T04:45:00.000Z</segmentStart><segmentEnd>2018-06-06T20:15:00.000Z</segmentEnd><validFrom>2018-05-18T06:15:00.000Z</validFrom><validTo>2018-06-06T02:15:00.000Z</validTo><availableIn>1285185548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6665</id><aircraftId>342</aircraftId><tailNumber>9H-VCF</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>675</departureAirportId><departureAirportPlaceId>661</departureAirportPlaceId><segmentStart>2018-06-04T07:00:00.000Z</segmentStart><segmentEnd>2018-06-07T07:00:00.000Z</segmentEnd><validFrom>2018-05-17T09:45:00.000Z</validFrom><validTo>2018-06-09T15:15:00.000Z</validTo><availableIn>1289685548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6601</id><aircraftId>360</aircraftId><tailNumber>9H-VJM</tailNumber><aircraftTypeId>7</aircraftTypeId><departureAirportId>2289</departureAirportId><departureAirportPlaceId>2180</departureAirportPlaceId><segmentStart>2018-06-05T02:45:00.000Z</segmentStart><segmentEnd>2018-06-07T03:45:00.000Z</segmentEnd><validFrom>2018-05-11T04:00:00.000Z</validFrom><validTo>2018-06-06T09:45:00.000Z</validTo><availableIn>1357185548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6641</id><aircraftId>4046</aircraftId><tailNumber>9H-VJU</tailNumber><aircraftTypeId>7</aircraftTypeId><departureAirportId>1431</departureAirportId><departureAirportPlaceId>1379</departureAirportPlaceId><segmentStart>2018-06-07T02:30:00.000Z</segmentStart><segmentEnd>2018-06-10T02:30:00.000Z</segmentEnd><validFrom>2018-05-15T04:30:00.000Z</validFrom><validTo>2018-06-10T12:45:00.000Z</validTo><availableIn>1561485548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6621</id><aircraftId>360</aircraftId><tailNumber>9H-VJM</tailNumber><aircraftTypeId>7</aircraftTypeId><departureAirportId>1940</departureAirportId><departureAirportPlaceId>1846</departureAirportPlaceId><segmentStart>2018-06-08T17:00:00.000Z</segmentStart><segmentEnd>2018-06-11T17:00:00.000Z</segmentEnd><validFrom>2018-05-15T13:00:00.000Z</validFrom><validTo>2018-06-11T05:45:00.000Z</validTo><availableIn>1664085548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer><oneWayOffer><id>6721</id><aircraftId>360</aircraftId><tailNumber>9H-VJM</tailNumber><aircraftTypeId>7</aircraftTypeId><departureAirportId>1833</departureAirportId><departureAirportPlaceId>1753</departureAirportPlaceId><segmentStart>2018-06-13T00:00:00.000Z</segmentStart><segmentEnd>2018-06-15T23:45:00.000Z</segmentEnd><validFrom>2018-05-19T14:15:00.000Z</validFrom><validTo>2018-06-15T05:45:00.000Z</validTo><availableIn>2038485548</availableIn><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName></oneWayOffer></oneWayOffers><totalCount>29</totalCount></responseBody></responseDto>"
						},
						{
							"name": "No One Way Offers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<oneWayListRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currentCount>0</currentCount>\r\n    <!--<itemsPerPage>20</itemsPerPage>-->\r\n</oneWayListRequestDto>\r\n"
								},
								"url": "{{url}}/extranetServices/1.2/{{pricer_context}}/{{customer_context}}/{{cust_token}}/one-way-opportunities"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<responseDto>\n    <responseHeader>\n        <isError>false</isError>\n        <message>Success</message>\n        <statusCode>0</statusCode>\n    </responseHeader>\n    <responseBody>\n        <oneWayOffers/>\n        <totalCount>0</totalCount>\n    </responseBody>\n</responseDto>"
						}
					]
				},
				{
					"name": "Fetch OW Quote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6de17e64-1b68-4ebe-9a1a-f2005a66533e",
								"type": "text/javascript",
								"exec": [
									"// Quote ID randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('OW_orderExternalIdentifierId', uuid.v4());",
									"",
									"// Set airport array count global variable",
									"pm.globals.set(\"count_airportId\", 0);",
									"// Array of airport Id's",
									"var airportId = [1428, 2497, 2925, 9217, 250, 1263, 2502, 2914];",
									"// Set OW_arrivalAirportId as 1st airport Id from above array",
									"pm.environment.set(\"OW_arrivalAirportId\", airportId[pm.globals.get(\"count_airportId\")]);",
									"",
									"// Flight External Identifier randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('OW_flightLegExternalIdentifierId', uuid.v4());",
									"",
									"switch(pm.environment.get(\"OW_aircraftTypeId\")){",
									"    case \"5\":",
									"        pm.environment.set(\"OW_aircraftType\", \"CL605\");",
									"        pm.environment.set(\"OW_aircraftTypeName\", \"Challenger 605\");",
									"        break;",
									"    case \"6\":",
									"        pm.environment.set(\"OW_aircraftType\", \"CL850\");",
									"        pm.environment.set(\"OW_aircraftTypeName\", \"Challenger 850\");",
									"        break;",
									"    case \"7\":",
									"        pm.environment.set(\"OW_aircraftType\", \"GLEX\");",
									"        pm.environment.set(\"OW_aircraftTypeName\", \"Global XRS/6000\");",
									"        break;",
									"    case \"10\":",
									"        pm.environment.set(\"OW_aircraftType\", \"CL350\");",
									"        pm.environment.set(\"OW_aircraftTypeName\", \"Challenger 350\");",
									"        break;",
									"    case \"16\":",
									"        pm.environment.set(\"OW_aircraftType\", \"GL5T\");",
									"        pm.environment.set(\"OW_aircraftTypeName\", \"Global 5000\");",
									"        break;",
									"}",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cd8b3487-4762-482d-9ddb-665656aa389f",
								"type": "text/javascript",
								"exec": [
									"var airportId = [1428, 2497, 2925, 9217, 250, 1263, 2502, 2914];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"",
									"if(jsonData.responseDto.responseHeader.statusCode == \"0\"){",
									"    // console.log(\"Success condition\");",
									"",
									"    var data1 = [\"0\", \"Success\", \"false\"];",
									"    ",
									"    tests[\"Status Code is \" + data1[0]] = jsonData.responseDto.responseHeader.statusCode === data1[0];",
									"    tests[\"Message is correct\"] = jsonData.responseDto.responseHeader.message === data1[1];",
									"    tests[\"isError is \" + data1[2]] = jsonData.responseDto.responseHeader.isError === data1[2];",
									"    ",
									"    pm.environment.set(\"OW_totalAmount\", jsonData.responseDto.responseBody.prices.price.amount);",
									"    pm.environment.set(\"OW_arrivalTime\", jsonData.responseDto.responseBody.prices.price.flightLegs.flightLeg.arrivalTime);",
									"    pm.environment.set(\"OW_quoteId\", jsonData.responseDto.responseBody.quoteId);",
									"    pm.environment.set(\"OW_quotePriceId\", jsonData.responseDto.responseBody.prices.price.quoteOfferId);",
									"    pm.environment.set(\"OW_arrivalAirportId\", airportId[pm.globals.get(\"count_airportId\")]);",
									"    ",
									"    pm.globals.set(\"mode\", \"new\");",
									"} else if(jsonData.responseDto.responseHeader.statusCode == \"5\"){",
									"    // console.log(\"Fuel stop condition...\");",
									"    ",
									"    var data2 = [\"5\", \"Requested One Way that requires Fuel Stop\", \"true\"];",
									"    ",
									"    tests[\"Status Code is \" + data2[0]] = jsonData.responseDto.responseHeader.statusCode === data2[0];",
									"    tests[\"Message is correct\"] = jsonData.responseDto.responseHeader.message === data2[1];",
									"    tests[\"isError is \" + data2[2]] = jsonData.responseDto.responseHeader.isError === data2[2];",
									"    ",
									"    // console.log(\"BEFORE count_airportId incremented\");",
									"    pm.globals.set(\"count_airportId\", 1+pm.globals.get(\"count_airportId\"));",
									"    // console.log(\"AFTER count_airportId is incremented:\" + pm.globals.get(\"count_airportId\"));",
									"    pm.environment.set(\"OW_arrivalAirportId\", airportId[pm.globals.get(\"count_airportId\")]);",
									"    // console.log(\"OW_arrivalAirportId IS UPDATED:\" + pm.environment.get(\"OW_arrivalAirportId\"));",
									"    ",
									"    postman.setNextRequest(\"Fetch OW Quote\");",
									"} ",
									"",
									"// console.log(\"Total amount: \" + pm.environment.get(\"OW_totalAmount\"));",
									"// console.log(\"Arr time: \" + pm.environment.get(\"OW_arrivalTime\"));",
									"// console.log(\"Quote id: \" + pm.environment.get(\"OW_quoteId\"));",
									"// console.log(\"Quote price id: \" + pm.environment.get(\"OW_quotePriceId\"));",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<quoteRequestDto>\r\n    <orderExternalIdentifierId>{{OW_orderExternalIdentifierId}}</orderExternalIdentifierId>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <accountTypeId>9</accountTypeId>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <opportunityId>{{OW_offer_id}}</opportunityId>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExternalIdentifierId>{{OW_flightLegExternalIdentifierId}}</flightLegExternalIdentifierId>\r\n            <departureAirportId>{{OW_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{OW_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>1</numberOfPassenger>\r\n            <requestedAircraftTypeId>{{OW_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <departureTime>{{OW_departureTime}}</departureTime>\r\n            <isCateringSelected>false</isCateringSelected>\r\n        </flightLeg>\r\n    </flightLegs>\r\n</quoteRequestDto>"
						},
						"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{cust_token}}/1.1/{{pricer_context}}/quote/"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<quoteRequestDto>\r\n    <orderExternalIdentifierId>{{OW_orderExternalIdentifierId}}</orderExternalIdentifierId>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <accountTypeId>9</accountTypeId>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <opportunityId>{{OW_offer_id}}</opportunityId>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExternalIdentifierId>{{OW_flightLegExternalIdentifierId}}</flightLegExternalIdentifierId>\r\n            <departureAirportId>{{OW_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{OW_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>1</numberOfPassenger>\r\n            <requestedAircraftTypeId>{{OW_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <departureTime>{{OW_departureTime}}</departureTime>\r\n            <isCateringSelected>false</isCateringSelected>\r\n        </flightLeg>\r\n    </flightLegs>\r\n</quoteRequestDto>"
								},
								"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{cust_token}}/1.1/{{pricer_context}}/quote/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:50:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><responseDto><responseHeader><isError>false</isError><message>Success</message><statusCode>0</statusCode></responseHeader><responseBody><accountId>46473</accountId><accountTypeId>9</accountTypeId><membershipTypeId>1</membershipTypeId><orderExternalIdentifierId>4d408dac-e083-4bd2-8bc9-e1a82d0fd932</orderExternalIdentifierId><prices><price><amount>132490</amount><costsBreakdown><costBreakdown><amount>132490</amount><currency>USD</currency><description>Flight Cost</description><rank>1</rank></costBreakdown></costsBreakdown><currency>USD</currency><flightLegs><flightLeg><arrivalAirportId>1428</arrivalAirportId><arrivalTime>2018-06-15T07:20:00.000Z</arrivalTime><departureAirportId>1833</departureAirportId><departureTime>2018-06-15T05:45:00.000Z</departureTime><flightLegExternalIdentifierId>4a14d7e1-2fd6-4d10-b8ce-3b8f0389f59f</flightLegExternalIdentifierId><flightTimeMinutes>635</flightTimeMinutes><numberOfPassenger>1</numberOfPassenger><operatingCompanyId>10134</operatingCompanyId><operatingCompanyName>VistaJet Limited</operatingCompanyName><opportunityId>6721</opportunityId><requestedAircraftTypeId>7</requestedAircraftTypeId></flightLeg></flightLegs><notes>Notes</notes><paymentAdditionalCharges><paymentAdditionalCharge><amount>0</amount><cardBrandID>1</cardBrandID><description>American Express</description><percentage>0.0</percentage><totalAmount>132490</totalAmount><typeId>2</typeId></paymentAdditionalCharge><paymentAdditionalCharge><amount>0</amount><cardBrandID>4</cardBrandID><description>MasterCard</description><percentage>0.0</percentage><totalAmount>132490</totalAmount><typeId>2</typeId></paymentAdditionalCharge><paymentAdditionalCharge><amount>0</amount><cardBrandID>5</cardBrandID><description>Visa</description><percentage>0.0</percentage><totalAmount>132490</totalAmount><typeId>2</typeId></paymentAdditionalCharge></paymentAdditionalCharges><pricePerPax>0</pricePerPax><pricingType>One Way</pricingType><quoteOfferId>EC8BBD5</quoteOfferId><rank>1</rank><termsAndConditionsId>590757b5e4b01d3ac6a0f5cb</termsAndConditionsId><tncNotes>Tnc Notes</tncNotes><vatNotes>VAT charges: USD 0</vatNotes></price></prices><quoteId>0ad06091-3cd2-465a-ae46-4e02159fbf2d</quoteId></responseBody></responseDto>"
						}
					]
				},
				{
					"name": "Avail OW Offer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "659acb15-2cc9-46e7-8926-cf4a103384a7",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"OW_departureTime\", pm.environment.get(\"OW_departureTime\").substring(0, 19) + \"Z\");",
									"pm.environment.set(\"OW_arrivalTime\", pm.environment.get(\"OW_arrivalTime\").substring(0, 19) + \"Z\");",
									"",
									"// console.log(\"Updated Dept time: \" + pm.environment.get(\"OW_departureTime\"));",
									"// console.log(\"Updated Arr time: \" + pm.environment.get(\"OW_arrivalTime\"));",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f46ca0e9-21ee-4771-8f73-a9c134a16523",
								"type": "text/javascript",
								"exec": [
									"var jsonData = xml2Json(responseBody);",
									"",
									"if(jsonData.ResponseBody.responseHeader.statusCode == \"2\"){",
									"    // console.log(\"Top Up condition...\");",
									"",
									"    var data1 = [\"2\", \"You have insufficient funds.\", \"true\"];",
									"",
									"    tests[\"Status Code is \" + data1[0]] = jsonData.ResponseBody.responseHeader.statusCode === data1[0];",
									"    tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data1[1];",
									"    tests[\"isError is \" + data1[2]] = jsonData.ResponseBody.responseHeader.isError === data1[2];",
									"",
									"    pm.environment.set(\"OW_topup_amount\", jsonData.ResponseBody.remainingFunds);",
									"    pm.environment.set(\"OW_currency\", jsonData.ResponseBody.currency);",
									"",
									"    tests[\"TopUp amount: \" + pm.variables.get(\"OW_currency\") + pm.variables.get(\"OW_topup_amount\")] = jsonData.ResponseBody.responseHeader.statusCode === data1[0];",
									"",
									"    postman.setNextRequest(\"OW Top Up Reference\");",
									"} else if(jsonData.ResponseBody.responseHeader.statusCode == \"0\"){",
									"    // console.log(\"Offer availed...\");",
									"",
									"    var data2 = [\"0\", \"OK\", \"false\"];",
									"    ",
									"    tests[\"Status Code is \" + data2[0]] = jsonData.ResponseBody.responseHeader.statusCode === data2[0];",
									"    tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data2[1];",
									"    tests[\"isError is \" + data2[2]] = jsonData.ResponseBody.responseHeader.isError === data2[2];",
									"    ",
									"    pm.environment.set(\"OW_orderLegId\", jsonData.ResponseBody.flightOrderId);",
									"    ",
									"    postman.setNextRequest(\"Upcoming OW Itineraries\");",
									"} else if(jsonData.ResponseBody.responseHeader.statusCode == \"10\"){",
									"    // console.log(\"Offer no longer available...\");",
									"",
									"    var data2 = [\"10\", \"One Way offer is no longer available\", \"true\"];",
									"    ",
									"    tests[\"Status Code is \" + data2[0]] = jsonData.ResponseBody.responseHeader.statusCode === data2[0];",
									"    tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data2[1];",
									"    tests[\"isError is \" + data2[2]] = jsonData.ResponseBody.responseHeader.isError === data2[2];",
									"    ",
									"    pm.environment.set(\"OW_offer_boolean\", true);",
									"    // console.log(pm.environment.get(\"OW_offer_boolean\"));",
									"    pm.environment.set(\"OW_count\", pm.environment.get(\"OW_count\")-1);",
									"    ",
									"    postman.setNextRequest(\"Fetch OW Offers\");",
									"} ",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<flightRequestForCustomer>\r\n    <referenceOrderId/>\r\n    <quoteId>{{OW_quoteId}}</quoteId>\r\n    <quotePriceId>{{OW_quotePriceId}}</quotePriceId>\r\n    <account>{{vjdirect_accountId}}</account>\r\n    <totalAmount>{{OW_totalAmount}}</totalAmount>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <flightLegExtIdentifier>{{OW_flightLegExternalIdentifierId}}</flightLegExtIdentifier>\r\n            <departureAirportId>{{OW_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{OW_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>7</numberOfPassenger>\r\n            <aircraftType>{{OW_aircraftType}}</aircraftType>\r\n            <departureTime>{{OW_departureTime}}</departureTime>\r\n            <arrivalTime>{{OW_arrivalTime}}</arrivalTime>\r\n            <requestedAircraftTypeId>{{OW_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>{{OW_aircraftTypeName}}</requestedAircraftTypeName>\r\n            <isCancelled>false</isCancelled>\r\n            <opportunityId>{{OW_offer_id}}</opportunityId>\r\n            <emptyLegId/>\r\n        </flightLeg>\r\n    </flightLegs>\r\n    \r\n    <paymentOptionId>1</paymentOptionId>\r\n    <mode>{{mode}}</mode>\r\n</flightRequestForCustomer>\r\n"
						},
						"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight/"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<flightRequestForCustomer>\r\n    <referenceOrderId/>\r\n    <quoteId>{{OW_quoteId}}</quoteId>\r\n    <quotePriceId>{{OW_quotePriceId}}</quotePriceId>\r\n    <account>{{vjdirect_accountId}}</account>\r\n    <totalAmount>{{OW_totalAmount}}</totalAmount>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <flightLegExtIdentifier>{{OW_flightLegExternalIdentifierId}}</flightLegExtIdentifier>\r\n            <departureAirportId>{{OW_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{OW_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>7</numberOfPassenger>\r\n            <aircraftType>{{OW_aircraftType}}</aircraftType>\r\n            <departureTime>{{OW_departureTime}}</departureTime>\r\n            <arrivalTime>{{OW_arrivalTime}}</arrivalTime>\r\n            <requestedAircraftTypeId>{{OW_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>{{OW_aircraftTypeName}}</requestedAircraftTypeName>\r\n            <isCancelled>false</isCancelled>\r\n            <opportunityId>{{OW_offer_id}}</opportunityId>\r\n            <emptyLegId/>\r\n        </flightLeg>\r\n    </flightLegs>\r\n    \r\n    <paymentOptionId>1</paymentOptionId>\r\n    <mode>{{mode}}</mode>\r\n</flightRequestForCustomer>\r\n"
								},
								"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "168",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:51:36 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ResponseBody><responseHeader><isError>false</isError><message>OK</message><statusCode>0</statusCode></responseHeader><flightOrderId>382368</flightOrderId></ResponseBody>"
						}
					]
				},
				{
					"name": "OW Top Up Reference",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cdddfc4-2228-49f9-9b1e-33c231750a76",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", \"false\"];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.topUpReferenceResponseDto.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.topUpReferenceResponseDto.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.topUpReferenceResponseDto.responseHeader.isError === data1[2];",
									"",
									"pm.globals.set(\"mode\", \"retry\");",
									"postman.setNextRequest(\"Avail OW Offer\");",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<topUpReferenceRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currency>{{OW_currency}}</currency>\r\n    <transferAmount>{{OW_topup_amount}}</transferAmount>\r\n</topUpReferenceRequestDto>"
						},
						"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{cust_token}}/topUpReference/"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<topUpReferenceRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currency>{{OW_currency}}</currency>\r\n    <transferAmount>{{OW_topup_amount}}</transferAmount>\r\n</topUpReferenceRequestDto>"
								},
								"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{cust_token}}/topUpReference/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:53:31 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><topUpReferenceResponseDto><responseHeader><isError>true</isError><message>Invalid Currency Code</message><statusCode>1</statusCode></responseHeader></topUpReferenceResponseDto>"
						}
					]
				},
				{
					"name": "Upcoming OW Itineraries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "583badec-e02a-4076-90cb-5d1ef4f3b760",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"pm.test(\"Recent created OW Offer's order leg id is present in Upcoming Itineraries\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"OW_orderLegId\"));",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/extranetServices/1.8/{{customer_context}}/{{customer_context}}/{{cust_token}}/fetchItineraries?isUpcoming=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"extranetServices",
								"1.8",
								"{{customer_context}}",
								"{{customer_context}}",
								"{{cust_token}}",
								"fetchItineraries"
							],
							"query": [
								{
									"key": "isUpcoming",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/extranetServices/1.8/{{customer_context}}/{{customer_context}}/{{cust_token}}/fetchItineraries?isUpcoming=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.8",
										"{{customer_context}}",
										"{{customer_context}}",
										"{{cust_token}}",
										"fetchItineraries"
									],
									"query": [
										{
											"key": "isUpcoming",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:55:21 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"itineraryDtos\":[{\"orderExtIdentifier\":\"91d4e8bb-3b77-46b2-a862-65984bb50993\",\"orderStatus\":\"Unconfirmed\",\"accountId\":44676,\"legs\":[{\"flightLegExtIdentifier\":\"3032ec30-0f30-4e90-b426-24f82b539acb\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-21T12:45:13Z\",\"departureAirportTimeUTC\":\"2018-05-21T07:45:13Z\",\"arrivalAirportTimeLocal\":\"2018-05-21T17:45:13Z\",\"arrivalAirportTimeUTC\":\"2018-05-21T12:45:13Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"31e7ef2e-ba1d-4d83-8c20-c473ec08bf43\",\"orderStatus\":\"Unconfirmed\",\"accountId\":44676,\"legs\":[{\"flightLegExtIdentifier\":\"41aa85db-f357-4fcf-805f-251efe748533\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-21T12:45:33Z\",\"departureAirportTimeUTC\":\"2018-05-21T07:45:33Z\",\"arrivalAirportTimeLocal\":\"2018-05-21T17:45:33Z\",\"arrivalAirportTimeUTC\":\"2018-05-21T12:45:33Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1},{\"flightLegExtIdentifier\":\"b3ba84a7-7db6-4ada-a9e3-219900d5b8a8\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-22T12:45:33Z\",\"departureAirportTimeUTC\":\"2018-05-22T07:45:33Z\",\"arrivalAirportTimeLocal\":\"2018-05-22T17:45:33Z\",\"arrivalAirportTimeUTC\":\"2018-05-22T12:45:33Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderLegId\":380716,\"orderStatus\":\"Confirmed\",\"orderType\":\"Program\",\"accountId\":44676,\"legs\":[{\"legId\":1134597,\"arrivalAirportId\":1923,\"departureAirportId\":1439,\"departureAirportTimeLocal\":\"2018-05-29T20:00:00Z\",\"departureAirportTimeUTC\":\"2018-05-30T00:00:00Z\",\"arrivalAirportTimeLocal\":\"2018-05-30T09:25:00Z\",\"arrivalAirportTimeUTC\":\"2018-05-30T07:25:00Z\",\"defaultDurationMinutes\":445,\"aircraftTypeName\":\"Global XRS/6000\",\"aircraftTypeId\":7,\"requestedAircraftTypeName\":\"N/A\",\"aircraftTailNumber\":\"9H-VJP\",\"aircraftId\":1496,\"numberOfPassenger\":7,\"legStatus\":\"Confirmed\",\"version\":0,\"operatorTailId\":10134,\"operatorTailName\":\"VistaJet Limited\",\"operatingCompanyName\":\"VistaJet Limited\"}]},{\"orderLegId\":382368,\"orderStatus\":\"Unconfirmed\",\"orderType\":\"VistaJet Direct\",\"accountId\":46473,\"legs\":[{\"legId\":1137099,\"arrivalAirportId\":1428,\"departureAirportId\":1833,\"departureAirportTimeLocal\":\"2018-06-15T05:45:00Z\",\"departureAirportTimeUTC\":\"2018-06-15T03:45:00Z\",\"arrivalAirportTimeLocal\":\"2018-06-15T07:40:00Z\",\"arrivalAirportTimeUTC\":\"2018-06-15T14:40:00Z\",\"defaultDurationMinutes\":655,\"aircraftTypeName\":\"Global XRS/6000\",\"aircraftTypeId\":7,\"requestedAircraftTypeName\":\"Global XRS/6000\",\"requestedAircraftTypeId\":7,\"aircraftTailNumber\":\"9H-VJM\",\"aircraftId\":360,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":0,\"operatorTailId\":10134,\"operatorTailName\":\"VistaJet Limited\",\"operatingCompanyName\":\"VistaJet Limited\"}]},{\"orderExtIdentifier\":\"0F41311A-15EB-CA8F-8173-6FBAF1BA0465\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"F8616C84-0B8A-CC99-187F-BF0EEC15D3DF\",\"arrivalAirportId\":323,\"departureAirportId\":1486,\"departureAirportTimeLocal\":\"2018-09-20T05:25:00Z\",\"departureAirportTimeUTC\":\"2018-09-20T03:25:00Z\",\"arrivalAirportTimeLocal\":\"2018-09-20T07:30:00Z\",\"arrivalAirportTimeUTC\":\"2018-09-20T05:30:00Z\",\"defaultDurationMinutes\":125,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"6EEEEFFF-2946-7122-E261-88EBD20918A9\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"7FAF7D5F-FD49-5EE3-D615-6957ECCC7644\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"256F76E4-2C8D-C59C-F4CC-203E5ACF97B7\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"08B533B5-313A-5AAC-6DC3-B611C17AF314\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"19E0DBCE-E01D-FED1-B37E-6A6CF2A01CA5\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"F4423CBB-8956-0B80-0300-482A872F09B4\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"96D6D9CC-97E5-CC03-47A0-F800854094D5\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"3F3C0401-8748-4EBA-1EFF-C7AEF22E78E0\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"22E5E163-B8CF-6461-8BC7-EE64FA87F37D\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"B5670F7B-AFD6-9EF5-D731-3CCC2D8BAC6D\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"008A384C-7905-3310-4C17-3AD2BE143B3E\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"71CAAAF2-D3CC-C444-BD99-9098157693B6\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"FBB39FD7-CE47-756C-A48F-8FDE5EB28990\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"2E943143-5F30-E7BC-0661-DA40D242222C\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"80D92397-95F4-648B-9714-A494638AEF63\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"452F40BB-E834-1EA7-51FF-E142FE00F109\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"CF94CD06-B9A3-70BF-1CF2-BDA786F65420\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"A2702CB1-BDAC-17D7-6B64-60771784A35F\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"1A54E14F-FED0-AEEE-B6B4-CFCAD71F0F1C\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"3624650E-7057-BEC2-4453-1829B894BF2B\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"1CAB943F-8432-94BE-8393-32037FDB2B41\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"21FA5013-0807-9E66-2F22-3E75531742F6\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"8A4A446A-48C8-EC66-6E5E-DE6B32B1F5D8\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"2249AA47-D6CA-508F-8DB6-B8C55277101E\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]}]}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8e09accb-7334-4f8e-801a-c53134441ed4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9785a419-eebb-4e36-94c8-9fc9048a312d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Avail EL Offer - in progress",
			"item": [
				{
					"name": "Pricer Reload",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c24d7491-6127-45bf-89f9-716aed3fe1d7",
								"type": "text/javascript",
								"exec": [
									"// Boolean to check if EL_count should be updated or not",
									"pm.environment.set(\"EL_offer_boolean\", false);",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": "{{pricer_url}}/{{pricer_context}}/v1/pricer/reload-data"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": "{{pricer_url}}/{{pricer_context}}/v1/pricer/reload-data"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "2",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:57:53 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Fetch EL Offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e166c86-207b-4dc2-855c-b12b4b2d218a",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"Success\", \"false\"];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseDto.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseDto.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseDto.responseHeader.isError === data1[2];",
									"",
									"// Get all Offers",
									"var EL_offers = jsonData.responseDto.responseBody.emptyLegOffers.emptyLegOffer;",
									"// console.log(EL_offers);",
									"",
									"var list = jsonData.responseDto.responseBody.emptyLegOffers;",
									"// console.log(list);",
									"if(!list){",
									"    // console.log(\"in if condition\");",
									"    tests[\"No Empty Legs available\"] = !list;",
									"} else {",
									"    if(pm.environment.get(\"EL_offer_boolean\") === false){",
									"        // console.log(\"in if condition EL_offer_boolean: \" + pm.environment.get(\"EL_offer_boolean\"));",
									"        pm.environment.set(\"EL_count\", jsonData.responseDto.responseBody.totalCount-1);",
									"    }",
									"    switch(pm.environment.get(\"EL_count\")){",
									"        case 0:",
									"            // console.log(\"case 0 EL_offer_boolean: \" + pm.environment.get(\"EL_offer_boolean\"));",
									"            pm.environment.set(\"EL_offer_id\", EL_offers.emptyLegId);",
									"            pm.environment.set(\"EL_aircraftTypeId\", EL_offers.aircraftTypeId);",
									"            pm.environment.set(\"EL_departureAirportId\", EL_offers.departureAirportId);",
									"            pm.environment.set(\"EL_arrivalAirportId\", EL_offers.arrivalAirportId);",
									"            pm.environment.set(\"EL_departureTime\", EL_offers.minDepartureTime);",
									"            break;",
									"        default:",
									"            // console.log(\"case \" + pm.environment.get(\"EL_count\") + \" EL_offer_boolean: \" + pm.environment.get(\"EL_offer_boolean\"));",
									"            // console.log(\"Default EL_offer_boolean: \" + pm.environment.get(\"EL_offer_boolean\"));",
									"            pm.environment.set(\"EL_offer_id\", EL_offers[pm.environment.get(\"EL_count\")].emptyLegId);",
									"            pm.environment.set(\"EL_aircraftTypeId\", EL_offers[pm.environment.get(\"EL_count\")].aircraftTypeId);",
									"            pm.environment.set(\"EL_departureAirportId\", EL_offers[pm.environment.get(\"EL_count\")].departureAirportId);",
									"            pm.environment.set(\"EL_arrivalAirportId\", EL_offers[pm.environment.get(\"EL_count\")].arrivalAirportId);",
									"            pm.environment.set(\"EL_departureTime\", EL_offers[pm.environment.get(\"EL_count\")].minDepartureTime);",
									"            break;",
									"    }",
									"}",
									"// console.log(\"Offer id: \" + pm.environment.get(\"EL_offer_id\"));",
									"// console.log(\"Aircraft id: \" + pm.environment.get(\"EL_aircraftTypeId\"));",
									"// console.log(\"Dept airport id: \" + pm.environment.get(\"EL_departureAirportId\"));",
									"// console.log(\"Arr airport id: \" + pm.environment.get(\"EL_arrivalAirportId\"));",
									"// console.log(\"Dept time: \" + pm.environment.get(\"EL_departureTime\"));",
									"",
									"// Counter to pick airport id from array",
									"pm.globals.set(\"count_airportId\", 0);",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "494001ee-12f1-46c3-8fad-2e4ba2b16959",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<emptyLegRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currentCount>0</currentCount>\r\n    <!--<itemsPerPage>20</itemsPerPage>-->\r\n</emptyLegRequestDto>\r\n"
						},
						"url": "{{url}}/extranetServices/1.2/{{pricer_context}}/{{customer_context}}/{{cust_token}}/empty-leg-routes"
					},
					"response": [
						{
							"name": "No Empty Leg Offers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<emptyLegRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currentCount>0</currentCount>\r\n    <!--<itemsPerPage>20</itemsPerPage>-->\r\n</emptyLegRequestDto>\r\n"
								},
								"url": "{{url}}/extranetServices/1.2/{{pricer_context}}/{{customer_context}}/{{cust_token}}/empty-leg-routes"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "180",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 07:59:42 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><responseDto><responseHeader><isError>false</isError><message>Success</message><statusCode>0</statusCode></responseHeader><responseBody><emptyLegOffers/><totalCount>0</totalCount></responseBody></responseDto>"
						},
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<emptyLegRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currentCount>0</currentCount>\r\n    <!--<itemsPerPage>20</itemsPerPage>-->\r\n</emptyLegRequestDto>\r\n"
								},
								"url": "{{url}}/extranetServices/1.2/{{pricer_context}}/{{customer_context}}/{{cust_token}}/empty-leg-routes"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "537",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 08:35:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><responseDto><responseHeader><isError>false</isError><message>Success</message><statusCode>0</statusCode></responseHeader><responseBody><emptyLegOffers><emptyLegOffer><offerId>7621</offerId><emptyLegId>7341</emptyLegId><aircraftId>1197</aircraftId><tailNumber>N352VJ</tailNumber><aircraftTypeId>10</aircraftTypeId><departureAirportId>2801</departureAirportId><departureAirportPlaceId>2661</departureAirportPlaceId><arrivalAirportId>2063</arrivalAirportId><amount>18790</amount><currency>USD</currency><minDepartureTime>2018-05-21T16:30:00.000Z</minDepartureTime><maxDepartureTime>2018-05-26T12:45:00.000Z</maxDepartureTime><flightTimeMinutes>205</flightTimeMinutes><minArrivalTime>2018-05-21T18:55:00.000Z</minArrivalTime><maxArrivalTime>2018-05-26T15:10:00.000Z</maxArrivalTime><validFrom>2018-05-20T11:30:00.000Z</validFrom><validTo>2018-05-21T04:30:00.000Z</validTo><fspValidFrom>2018-05-20T08:29:56.108Z</fspValidFrom><fspValidTo>2018-05-21T01:25:00.000Z</fspValidTo><brokerValidFrom>2018-05-20T08:29:56.108Z</brokerValidFrom><brokerValidTo>2018-05-21T01:25:00.000Z</brokerValidTo><operatingCompanyId>1451</operatingCompanyId><operatingCompanyName>Strawberry Corporation</operatingCompanyName></emptyLegOffer></emptyLegOffers><totalCount>1</totalCount></responseBody></responseDto>"
						}
					]
				},
				{
					"name": "Fetch EL Quote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2e7d6b4c-ad92-4672-89ae-c6ddd3663d45",
								"type": "text/javascript",
								"exec": [
									"// Quote ID randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('EL_orderExternalIdentifierId', uuid.v4());",
									"",
									"// Set airport array count global variable",
									"pm.globals.set(\"count_airportId\", 0);",
									"",
									"// Flight External Identifier randomly generated",
									"var uuid = require('uuid');",
									"pm.environment.set('EL_flightLegExternalIdentifierId', uuid.v4());",
									"",
									"switch(pm.environment.get(\"EL_aircraftTypeId\")){",
									"    case \"5\":",
									"        pm.environment.set(\"EL_aircraftType\", \"CL605\");",
									"        pm.environment.set(\"EL_aircraftTypeName\", \"Challenger 605\");",
									"        break;",
									"    case \"6\":",
									"        pm.environment.set(\"EL_aircraftType\", \"CL850\");",
									"        pm.environment.set(\"EL_aircraftTypeName\", \"Challenger 850\");",
									"        break;",
									"    case \"7\":",
									"        pm.environment.set(\"EL_aircraftType\", \"GLEX\");",
									"        pm.environment.set(\"EL_aircraftTypeName\", \"Global XRS/6000\");",
									"        break;",
									"    case \"10\":",
									"        pm.environment.set(\"EL_aircraftType\", \"CL350\");",
									"        pm.environment.set(\"EL_aircraftTypeName\", \"Challenger 350\");",
									"        break;",
									"    case \"16\":",
									"        pm.environment.set(\"EL_aircraftType\", \"GL5T\");",
									"        pm.environment.set(\"EL_aircraftTypeName\", \"Global 5000\");",
									"        break;",
									"}",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "04865864-b24d-495e-b519-ede46dd49f25",
								"type": "text/javascript",
								"exec": [
									"var jsonData = xml2Json(responseBody);",
									"",
									"if(jsonData.responseDto.responseHeader.statusCode == \"0\"){",
									"    // console.log(\"Success condition\");",
									"",
									"    var data1 = [\"0\", \"Success\", \"false\"];",
									"    ",
									"    tests[\"Status Code is \" + data1[0]] = jsonData.responseDto.responseHeader.statusCode === data1[0];",
									"    tests[\"Message is correct\"] = jsonData.responseDto.responseHeader.message === data1[1];",
									"    tests[\"isError is \" + data1[2]] = jsonData.responseDto.responseHeader.isError === data1[2];",
									"",
									"    pm.environment.set(\"EL_offer_id\", jsonData.responseDto.responseBody.prices.price.flightLegs.flightLeg.emptyLegId);",
									"    pm.environment.set(\"EL_totalAmount\", jsonData.responseDto.responseBody.prices.price.amount);",
									"    pm.environment.set(\"EL_arrivalTime\", jsonData.responseDto.responseBody.prices.price.flightLegs.flightLeg.arrivalTime);",
									"    pm.environment.set(\"EL_quoteId\", jsonData.responseDto.responseBody.quoteId);",
									"    pm.environment.set(\"EL_quotePriceId\", jsonData.responseDto.responseBody.prices.price.quoteOfferId);",
									"",
									"    pm.globals.set(\"mode\", \"new\");",
									"} else if(jsonData.responseDto.responseHeader.statusCode == \"5\"){",
									"    // console.log(\"Fuel stop condition...\");",
									"    ",
									"    var data2 = [\"5\", \"Requested Empty Leg requires Fuel Stop\", \"true\"];",
									"    ",
									"    tests[\"Status Code is \" + data2[0]] = jsonData.responseDto.responseHeader.statusCode === data2[0];",
									"    tests[\"Message is correct\"] = jsonData.responseDto.responseHeader.message === data2[1];",
									"    tests[\"isError is \" + data2[2]] = jsonData.responseDto.responseHeader.isError === data2[2];",
									"    ",
									"    pm.environment.set(\"EL_offer_boolean\", true);",
									"    // console.log(pm.environment.get(\"EL_offer_boolean\"));",
									"    pm.environment.set(\"EL_count\", pm.environment.get(\"EL_count\")-1);",
									"    ",
									"    postman.setNextRequest(\"Fetch EL Offers\");",
									"} ",
									"",
									"// console.log(\"Empty Leg offer id: \" + pm.environment.get(\"EL_offer_id\"));",
									"// console.log(\"Total amount: \" + pm.environment.get(\"EL_totalAmount\"));",
									"// console.log(\"Arr time: \" + pm.environment.get(\"EL_arrivalTime\"));",
									"// console.log(\"Quote id: \" + pm.environment.get(\"EL_quoteId\"));",
									"// console.log(\"Quote price id: \" + pm.environment.get(\"EL_quotePriceId\"));",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<quoteRequestDto>\r\n    <orderExternalIdentifierId>{{EL_orderExternalIdentifierId}}</orderExternalIdentifierId>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <accountTypeId>9</accountTypeId>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <emptyLegId>{{EL_offer_id}}</emptyLegId>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExternalIdentifierId>{{EL_flightLegExternalIdentifierId}}</flightLegExternalIdentifierId>\r\n            <departureAirportId>{{EL_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{EL_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>1</numberOfPassenger>\r\n            <requestedAircraftTypeId>{{EL_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <departureTime>{{EL_departureTime}}</departureTime>\r\n            <isCateringSelected>false</isCateringSelected>\r\n        </flightLeg>\r\n    </flightLegs>\r\n</quoteRequestDto>"
						},
						"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{cust_token}}/1.1/{{pricer_context}}/quote/"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<quoteRequestDto>\r\n    <orderExternalIdentifierId>{{EL_orderExternalIdentifierId}}</orderExternalIdentifierId>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <accountTypeId>9</accountTypeId>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <emptyLegId>{{EL_offer_id}}</emptyLegId>\r\n            <isCancelled>false</isCancelled>\r\n            <flightLegExternalIdentifierId>{{EL_flightLegExternalIdentifierId}}</flightLegExternalIdentifierId>\r\n            <departureAirportId>{{EL_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{EL_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>1</numberOfPassenger>\r\n            <requestedAircraftTypeId>{{EL_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <departureTime>{{EL_departureTime}}</departureTime>\r\n            <isCateringSelected>false</isCateringSelected>\r\n        </flightLeg>\r\n    </flightLegs>\r\n</quoteRequestDto>"
								},
								"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{cust_token}}/1.1/{{pricer_context}}/quote/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 08:35:56 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><responseDto><responseHeader><isError>false</isError><message>Success</message><statusCode>0</statusCode></responseHeader><responseBody><accountId>46473</accountId><accountTypeId>9</accountTypeId><membershipTypeId>1</membershipTypeId><orderExternalIdentifierId>e0939772-6e2b-48b7-ba07-66c8542db9bd</orderExternalIdentifierId><prices><price><amount>18790</amount><costsBreakdown><costBreakdown><amount>18790</amount><currency>USD</currency><description>Flight Cost</description><rank>1</rank></costBreakdown></costsBreakdown><currency>USD</currency><flightLegs><flightLeg><arrivalAirportId>2063</arrivalAirportId><arrivalTime>2018-05-21T21:20:00.000Z</arrivalTime><departureAirportId>2801</departureAirportId><departureTime>2018-05-21T18:55:00.000Z</departureTime><emptyLegId>7621</emptyLegId><flightLegExternalIdentifierId>8afffeec-f6ac-439c-b865-6de6cd9da63a</flightLegExternalIdentifierId><flightTimeMinutes>205</flightTimeMinutes><numberOfPassenger>1</numberOfPassenger><operatingCompanyId>1451</operatingCompanyId><operatingCompanyName>Strawberry Corporation</operatingCompanyName><requestedAircraftTypeId>10</requestedAircraftTypeId></flightLeg></flightLegs><notes>Notes</notes><paymentAdditionalCharges><paymentAdditionalCharge><amount>0</amount><cardBrandID>1</cardBrandID><description>American Express</description><percentage>0.0</percentage><totalAmount>18790</totalAmount><typeId>2</typeId></paymentAdditionalCharge><paymentAdditionalCharge><amount>0</amount><cardBrandID>4</cardBrandID><description>MasterCard</description><percentage>0.0</percentage><totalAmount>18790</totalAmount><typeId>2</typeId></paymentAdditionalCharge><paymentAdditionalCharge><amount>0</amount><cardBrandID>5</cardBrandID><description>Visa</description><percentage>0.0</percentage><totalAmount>18790</totalAmount><typeId>2</typeId></paymentAdditionalCharge></paymentAdditionalCharges><pricePerPax>0</pricePerPax><pricingType>Empty Leg</pricingType><quoteOfferId>3E088B9</quoteOfferId><rank>1</rank><termsAndConditionsId>590757b5e4b01d3ac6a0f5cb</termsAndConditionsId><tncNotes>Tnc Notes</tncNotes><vatNotes>VAT charges: USD 0</vatNotes></price></prices><quoteId>3f772a0e-e8c1-4b87-a149-d385df04bd36</quoteId></responseBody></responseDto>"
						}
					]
				},
				{
					"name": "Avail EL Offer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "61731914-4102-49b1-898c-54edd02c66d0",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"EL_departureTime\", pm.environment.get(\"EL_departureTime\").substring(0, 19) + \"Z\");",
									"pm.environment.set(\"EL_arrivalTime\", pm.environment.get(\"EL_arrivalTime\").substring(0, 19) + \"Z\");",
									"",
									"// console.log(\"Updated Dept time: \" + pm.environment.get(\"EL_departureTime\"));",
									"// console.log(\"Updated Arr time: \" + pm.environment.get(\"EL_arrivalTime\"));",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a882cd85-cfde-487d-a6e8-54dceb7cc17d",
								"type": "text/javascript",
								"exec": [
									"var jsonData = xml2Json(responseBody);",
									"",
									"if(jsonData.ResponseBody.responseHeader.statusCode == \"2\"){",
									"    // console.log(\"Top Up condition...\");",
									"",
									"    var data1 = [\"2\", \"You have insufficient funds.\", \"true\"];",
									"",
									"    tests[\"Status Code is \" + data1[0]] = jsonData.ResponseBody.responseHeader.statusCode === data1[0];",
									"    tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data1[1];",
									"    tests[\"isError is \" + data1[2]] = jsonData.ResponseBody.responseHeader.isError === data1[2];",
									"",
									"    pm.environment.set(\"EL_topup_amount\", jsonData.ResponseBody.remainingFunds);",
									"    pm.environment.set(\"EL_currency\", jsonData.ResponseBody.currency);",
									"",
									"    tests[\"TopUp amount: \" + pm.variables.get(\"EL_currency\") + pm.variables.get(\"EL_topup_amount\")] = jsonData.ResponseBody.responseHeader.statusCode === data1[0];",
									"",
									"    postman.setNextRequest(\"EL Top Up Reference\");",
									"} else if(jsonData.ResponseBody.responseHeader.statusCode == \"0\"){",
									"    // console.log(\"Offer availed...\");",
									"",
									"    var data2 = [\"0\", \"OK\", \"false\"];",
									"    ",
									"    tests[\"Status Code is \" + data2[0]] = jsonData.ResponseBody.responseHeader.statusCode === data2[0];",
									"    tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data2[1];",
									"    tests[\"isError is \" + data2[2]] = jsonData.ResponseBody.responseHeader.isError === data2[2];",
									"    ",
									"    pm.environment.set(\"EL_orderLegId\", jsonData.ResponseBody.flightOrderId);",
									"    ",
									"    postman.setNextRequest(\"Upcoming EL Itineraries\");",
									"} else if(jsonData.ResponseBody.responseHeader.statusCode == \"10\"){",
									"    // console.log(\"Offer no longer available...\");",
									"",
									"    var data2 = [\"10\", \"Empty Leg offer is no longer available\", \"true\"];",
									"    ",
									"    tests[\"Status Code is \" + data2[0]] = jsonData.ResponseBody.responseHeader.statusCode === data2[0];",
									"    tests[\"Message is correct\"] = jsonData.ResponseBody.responseHeader.message === data2[1];",
									"    tests[\"isError is \" + data2[2]] = jsonData.ResponseBody.responseHeader.isError === data2[2];",
									"    ",
									"    pm.environment.set(\"EL_offer_boolean\", true);",
									"    // console.log(pm.environment.get(\"EL_offer_boolean\"));",
									"    pm.environment.set(\"EL_count\", pm.environment.get(\"EL_count\")-1);",
									"    ",
									"    postman.setNextRequest(\"Fetch EL Offers\");",
									"} ",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<flightRequestForCustomer>\r\n    <referenceOrderId/>\r\n    <quoteId>{{EL_quoteId}}</quoteId>\r\n    <quotePriceId>{{EL_quotePriceId}}</quotePriceId>\r\n    <account>{{vjdirect_accountId}}</account>\r\n    <totalAmount>{{EL_totalAmount}}</totalAmount>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <flightLegExtIdentifier>{{EL_flightLegExternalIdentifierId}}</flightLegExtIdentifier>\r\n            <departureAirportId>{{EL_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{EL_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>7</numberOfPassenger>\r\n            <aircraftType>{{EL_aircraftType}}</aircraftType>\r\n            <departureTime>{{EL_departureTime}}</departureTime>\r\n            <arrivalTime>{{EL_arrivalTime}}</arrivalTime>\r\n            <requestedAircraftTypeId>{{EL_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>{{EL_aircraftTypeName}}</requestedAircraftTypeName>\r\n            <isCancelled>false</isCancelled>\r\n            <opportunityId/>\r\n            <emptyLegId>{{EL_offer_id}}</emptyLegId>\r\n        </flightLeg>\r\n    </flightLegs>\r\n    \r\n    <paymentOptionId>1</paymentOptionId>\r\n    <mode>{{mode}}</mode>\r\n</flightRequestForCustomer>\r\n"
						},
						"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight/"
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<flightRequestForCustomer>\r\n    <referenceOrderId/>\r\n    <quoteId>{{EL_quoteId}}</quoteId>\r\n    <quotePriceId>{{EL_quotePriceId}}</quotePriceId>\r\n    <account>{{vjdirect_accountId}}</account>\r\n    <totalAmount>{{EL_totalAmount}}</totalAmount>\r\n    <flightLegs>\r\n        <flightLeg>\r\n            <flightLegExtIdentifier>{{EL_flightLegExternalIdentifierId}}</flightLegExtIdentifier>\r\n            <departureAirportId>{{EL_departureAirportId}}</departureAirportId>\r\n            <arrivalAirportId>{{EL_arrivalAirportId}}</arrivalAirportId>\r\n            <numberOfPassenger>7</numberOfPassenger>\r\n            <aircraftType>{{EL_aircraftType}}</aircraftType>\r\n            <departureTime>{{EL_departureTime}}</departureTime>\r\n            <arrivalTime>{{EL_arrivalTime}}</arrivalTime>\r\n            <requestedAircraftTypeId>{{EL_aircraftTypeId}}</requestedAircraftTypeId>\r\n            <requestedAircraftTypeName>{{EL_aircraftTypeName}}</requestedAircraftTypeName>\r\n            <isCancelled>false</isCancelled>\r\n            <opportunityId/>\r\n            <emptyLegId>{{EL_offer_id}}</emptyLegId>\r\n        </flightLeg>\r\n    </flightLegs>\r\n    \r\n    <paymentOptionId>1</paymentOptionId>\r\n    <mode>{{mode}}</mode>\r\n</flightRequestForCustomer>\r\n"
								},
								"url": "{{url}}/extranetServices/1.4/{{customer_context}}/{{customer_context}}/{{cust_token}}/requestflight/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 08:36:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ResponseBody><responseHeader><isError>false</isError><message>OK</message><statusCode>0</statusCode></responseHeader><flightOrderId>382369</flightOrderId></ResponseBody>"
						}
					]
				},
				{
					"name": "EL Top Up Reference",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fe8aff9-55d8-484a-9ce3-b2dd61ec5fb6",
								"type": "text/javascript",
								"exec": [
									"var data1 = [\"0\", \"OK\", \"false\"];",
									"",
									"var jsonData = xml2Json(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.topUpReferenceResponseDto.responseHeader.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.topUpReferenceResponseDto.responseHeader.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.topUpReferenceResponseDto.responseHeader.isError === data1[2];",
									"",
									"pm.globals.set(\"mode\", \"retry\");",
									"postman.setNextRequest(\"Avail EL Offer\");",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<topUpReferenceRequestDto>\r\n    <accountId>{{vjdirect_accountId}}</accountId>\r\n    <currency>{{EL_currency}}</currency>\r\n    <transferAmount>{{EL_topup_amount}}</transferAmount>\r\n</topUpReferenceRequestDto>"
						},
						"url": "{{url}}/extranetServices/1.1/{{customer_context}}/{{customer_context}}/{{cust_token}}/topUpReference/"
					},
					"response": []
				},
				{
					"name": "Upcoming EL Itineraries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6fa6e142-4732-444a-abee-3a44fde670ea",
								"type": "text/javascript",
								"exec": [
									"var data1 = [0, \"OK\", false];",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status Code is \" + data1[0]] = jsonData.responseHeaderDto.statusCode === data1[0];",
									"tests[\"Message is correct\"] = jsonData.responseHeaderDto.message === data1[1];",
									"tests[\"isError is \" + data1[2]] = jsonData.responseHeaderDto.isError === data1[2];",
									"",
									"pm.test(\"Recent created EL Offer's order leg id is present in Upcoming Itineraries\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"EL_orderLegId\"));",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/extranetServices/1.8/{{customer_context}}/{{customer_context}}/{{cust_token}}/fetchItineraries?isUpcoming=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"extranetServices",
								"1.8",
								"{{customer_context}}",
								"{{customer_context}}",
								"{{cust_token}}",
								"fetchItineraries"
							],
							"query": [
								{
									"key": "isUpcoming",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ideal case",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/extranetServices/1.8/{{customer_context}}/{{customer_context}}/{{cust_token}}/fetchItineraries?isUpcoming=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"extranetServices",
										"1.8",
										"{{customer_context}}",
										"{{customer_context}}",
										"{{cust_token}}",
										"fetchItineraries"
									],
									"query": [
										{
											"key": "isUpcoming",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 20 May 2018 08:37:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "{\"responseHeaderDto\":{\"statusCode\":0,\"message\":\"OK\",\"isError\":false},\"itineraryDtos\":[{\"orderExtIdentifier\":\"91d4e8bb-3b77-46b2-a862-65984bb50993\",\"orderStatus\":\"Unconfirmed\",\"accountId\":44676,\"legs\":[{\"flightLegExtIdentifier\":\"3032ec30-0f30-4e90-b426-24f82b539acb\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-21T12:45:13Z\",\"departureAirportTimeUTC\":\"2018-05-21T07:45:13Z\",\"arrivalAirportTimeLocal\":\"2018-05-21T17:45:13Z\",\"arrivalAirportTimeUTC\":\"2018-05-21T12:45:13Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderLegId\":382369,\"orderStatus\":\"Unconfirmed\",\"orderType\":\"VistaJet Direct\",\"accountId\":46473,\"legs\":[{\"legId\":1137100,\"arrivalAirportId\":2063,\"departureAirportId\":2801,\"departureAirportTimeLocal\":\"2018-05-21T18:55:00Z\",\"departureAirportTimeUTC\":\"2018-05-21T15:55:00Z\",\"arrivalAirportTimeLocal\":\"2018-05-21T21:20:00Z\",\"arrivalAirportTimeUTC\":\"2018-05-21T19:20:00Z\",\"defaultDurationMinutes\":205,\"aircraftTypeName\":\"Challenger 350\",\"aircraftTypeId\":10,\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"aircraftTailNumber\":\"N352VJ\",\"aircraftId\":1197,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":0,\"operatorTailId\":1451,\"operatorTailName\":\"Strawberry Corporation\",\"operatingCompanyName\":\"Strawberry Corporation\"}]},{\"orderExtIdentifier\":\"31e7ef2e-ba1d-4d83-8c20-c473ec08bf43\",\"orderStatus\":\"Unconfirmed\",\"accountId\":44676,\"legs\":[{\"flightLegExtIdentifier\":\"41aa85db-f357-4fcf-805f-251efe748533\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-21T12:45:33Z\",\"departureAirportTimeUTC\":\"2018-05-21T07:45:33Z\",\"arrivalAirportTimeLocal\":\"2018-05-21T17:45:33Z\",\"arrivalAirportTimeUTC\":\"2018-05-21T12:45:33Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1},{\"flightLegExtIdentifier\":\"b3ba84a7-7db6-4ada-a9e3-219900d5b8a8\",\"arrivalAirportId\":2503,\"departureAirportId\":2502,\"departureAirportTimeLocal\":\"2018-05-22T12:45:33Z\",\"departureAirportTimeUTC\":\"2018-05-22T07:45:33Z\",\"arrivalAirportTimeLocal\":\"2018-05-22T17:45:33Z\",\"arrivalAirportTimeUTC\":\"2018-05-22T12:45:33Z\",\"defaultDurationMinutes\":110,\"aircraftTypeName\":\"CL350\",\"requestedAircraftTypeName\":\"Challenger 350\",\"requestedAircraftTypeId\":10,\"numberOfPassenger\":4,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderLegId\":380716,\"orderStatus\":\"Confirmed\",\"orderType\":\"Program\",\"accountId\":44676,\"legs\":[{\"legId\":1134597,\"arrivalAirportId\":1923,\"departureAirportId\":1439,\"departureAirportTimeLocal\":\"2018-05-29T20:00:00Z\",\"departureAirportTimeUTC\":\"2018-05-30T00:00:00Z\",\"arrivalAirportTimeLocal\":\"2018-05-30T09:25:00Z\",\"arrivalAirportTimeUTC\":\"2018-05-30T07:25:00Z\",\"defaultDurationMinutes\":445,\"aircraftTypeName\":\"Global XRS/6000\",\"aircraftTypeId\":7,\"requestedAircraftTypeName\":\"N/A\",\"aircraftTailNumber\":\"9H-VJP\",\"aircraftId\":1496,\"numberOfPassenger\":7,\"legStatus\":\"Confirmed\",\"version\":0,\"operatorTailId\":10134,\"operatorTailName\":\"VistaJet Limited\",\"operatingCompanyName\":\"VistaJet Limited\"}]},{\"orderLegId\":382368,\"orderStatus\":\"Unconfirmed\",\"orderType\":\"VistaJet Direct\",\"accountId\":46473,\"legs\":[{\"legId\":1137099,\"arrivalAirportId\":1428,\"departureAirportId\":1833,\"departureAirportTimeLocal\":\"2018-06-15T05:45:00Z\",\"departureAirportTimeUTC\":\"2018-06-15T03:45:00Z\",\"arrivalAirportTimeLocal\":\"2018-06-15T07:40:00Z\",\"arrivalAirportTimeUTC\":\"2018-06-15T14:40:00Z\",\"defaultDurationMinutes\":655,\"aircraftTypeName\":\"Global XRS/6000\",\"aircraftTypeId\":7,\"requestedAircraftTypeName\":\"Global XRS/6000\",\"requestedAircraftTypeId\":7,\"aircraftTailNumber\":\"9H-VJM\",\"aircraftId\":360,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":0,\"operatorTailId\":10134,\"operatorTailName\":\"VistaJet Limited\",\"operatingCompanyName\":\"VistaJet Limited\"}]},{\"orderExtIdentifier\":\"0F41311A-15EB-CA8F-8173-6FBAF1BA0465\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"F8616C84-0B8A-CC99-187F-BF0EEC15D3DF\",\"arrivalAirportId\":323,\"departureAirportId\":1486,\"departureAirportTimeLocal\":\"2018-09-20T05:25:00Z\",\"departureAirportTimeUTC\":\"2018-09-20T03:25:00Z\",\"arrivalAirportTimeLocal\":\"2018-09-20T07:30:00Z\",\"arrivalAirportTimeUTC\":\"2018-09-20T05:30:00Z\",\"defaultDurationMinutes\":125,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"8A4A446A-48C8-EC66-6E5E-DE6B32B1F5D8\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"2249AA47-D6CA-508F-8DB6-B8C55277101E\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"1CAB943F-8432-94BE-8393-32037FDB2B41\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"21FA5013-0807-9E66-2F22-3E75531742F6\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"19E0DBCE-E01D-FED1-B37E-6A6CF2A01CA5\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"F4423CBB-8956-0B80-0300-482A872F09B4\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"1A54E14F-FED0-AEEE-B6B4-CFCAD71F0F1C\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"3624650E-7057-BEC2-4453-1829B894BF2B\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"FBB39FD7-CE47-756C-A48F-8FDE5EB28990\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"2E943143-5F30-E7BC-0661-DA40D242222C\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"256F76E4-2C8D-C59C-F4CC-203E5ACF97B7\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"08B533B5-313A-5AAC-6DC3-B611C17AF314\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"CF94CD06-B9A3-70BF-1CF2-BDA786F65420\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"A2702CB1-BDAC-17D7-6B64-60771784A35F\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"80D92397-95F4-648B-9714-A494638AEF63\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"452F40BB-E834-1EA7-51FF-E142FE00F109\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"6EEEEFFF-2946-7122-E261-88EBD20918A9\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"7FAF7D5F-FD49-5EE3-D615-6957ECCC7644\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"22E5E163-B8CF-6461-8BC7-EE64FA87F37D\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"B5670F7B-AFD6-9EF5-D731-3CCC2D8BAC6D\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"96D6D9CC-97E5-CC03-47A0-F800854094D5\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"3F3C0401-8748-4EBA-1EFF-C7AEF22E78E0\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]},{\"orderExtIdentifier\":\"008A384C-7905-3310-4C17-3AD2BE143B3E\",\"orderStatus\":\"Unconfirmed\",\"accountId\":2134,\"legs\":[{\"flightLegExtIdentifier\":\"71CAAAF2-D3CC-C444-BD99-9098157693B6\",\"arrivalAirportId\":2462,\"departureAirportId\":2497,\"departureAirportTimeLocal\":\"2018-12-21T23:35:00Z\",\"departureAirportTimeUTC\":\"2018-12-21T19:35:00Z\",\"arrivalAirportTimeLocal\":\"2018-12-23T01:05:00Z\",\"arrivalAirportTimeUTC\":\"2018-12-22T12:05:00Z\",\"defaultDurationMinutes\":990,\"aircraftTypeName\":\"GL5T\",\"requestedAircraftTypeName\":\"Global 5000\",\"requestedAircraftTypeId\":16,\"numberOfPassenger\":1,\"legStatus\":\"Unconfirmed\",\"version\":1}]}]}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8e09accb-7334-4f8e-801a-c53134441ed4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9785a419-eebb-4e36-94c8-9fc9048a312d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "29a005b6-6f0a-4ac2-abb7-c2b620061bf3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f0e7fad9-9d52-49aa-bb6e-94262925cfc5",
				"type": "text/javascript",
				"exec": [
					"tests[\"Status code is 200\"] = pm.response.to.have.status(200);",
					"",
					""
				]
			}
		}
	]
}